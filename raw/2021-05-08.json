[{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/093f/65e0/59_large.png?m=1615956453","name":"random","avatar_normal":"https://cdn.v2ex.com/navatar/093f/65e0/59_normal.png?m=1615956453","title":"随想","url":"https://www.v2ex.com/go/random","topics":2883,"footer":"","header":"有的时候，可以停下来找找灵感，然后再继续。","title_alternative":"Random","avatar_mini":"https://cdn.v2ex.com/navatar/093f/65e0/59_mini.png?m=1615956453","stars":917,"aliases":[],"root":false,"id":59,"parent_node_name":"v2ex"},"member":{"username":"Raven316","website":"","github":"","psn":"","avatar_normal":"https://cdn.v2ex.com/avatar/91ef/2282/402641_mini.png?m=1555495240","bio":"","url":"https://www.v2ex.com/u/Raven316","tagline":"","twitter":"","created":1555494864,"avatar_large":"https://cdn.v2ex.com/avatar/91ef/2282/402641_mini.png?m=1555495240","avatar_mini":"https://cdn.v2ex.com/avatar/91ef/2282/402641_mini.png?m=1555495240","location":"","btc":"","id":402641},"last_reply_by":"ryd994","last_touched":1620511431,"title":"关于自由","url":"https://www.v2ex.com/t/775584","created":1620439898,"content":"每个人都是自由的，只是绝大部分人不愿意付出自由的代价。故意混淆不愿与不能的区别是最容易犯的错误。","content_rendered":"<p>每个人都是自由的，只是绝大部分人不愿意付出自由的代价。故意混淆不愿与不能的区别是最容易犯的错误。</p>\n","last_modified":1620440018,"replies":148,"id":775584},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/1f0e/3dad/19_large.png?m=1588235467","name":"beijing","avatar_normal":"https://cdn.v2ex.com/navatar/1f0e/3dad/19_normal.png?m=1588235467","title":"北京","url":"https://www.v2ex.com/go/beijing","topics":3148,"footer":"","header":"","title_alternative":"Beijing","avatar_mini":"https://cdn.v2ex.com/navatar/1f0e/3dad/19_mini.png?m=1588235467","stars":1863,"aliases":[],"root":false,"id":19,"parent_node_name":"cn"},"member":{"username":"Ritr","website":null,"github":null,"psn":null,"avatar_normal":"https://cdn.v2ex.com/avatar/59a2/93ca/372571_mini.png?m=1545978824","bio":null,"url":"https://www.v2ex.com/u/Ritr","tagline":null,"twitter":null,"created":1545644833,"avatar_large":"https://cdn.v2ex.com/avatar/59a2/93ca/372571_mini.png?m=1545978824","avatar_mini":"https://cdn.v2ex.com/avatar/59a2/93ca/372571_mini.png?m=1545978824","location":null,"btc":null,"id":372571},"last_reply_by":"cassyfar","last_touched":1620506056,"title":"跟大家分享下我是如何省钱的","url":"https://www.v2ex.com/t/775576","created":1620438931,"content":"为啥要省钱？因为我花的每一分钱都会成为资本家射向无产阶级的子弹。\r\n\r\n早餐 10 元，有时候不吃早餐。午餐薅羊毛 3 元左右，晚餐吃加班餐 0 元，加班补贴 35 元，一天吃饭消费-22 元。\r\n\r\n关于如何白嫖住宿，还是个问题","content_rendered":"<p>为啥要省钱？因为我花的每一分钱都会成为资本家射向无产阶级的子弹。</p>\n<p>早餐 10 元，有时候不吃早餐。午餐薅羊毛 3 元左右，晚餐吃加班餐 0 元，加班补贴 35 元，一天吃饭消费-22 元。</p>\n<p>关于如何白嫖住宿，还是个问题</p>\n","last_modified":1620438931,"replies":97,"id":775576},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/74bb/a227/938_large.png?m=1591791660","name":"gts","avatar_normal":"https://cdn.v2ex.com/navatar/74bb/a227/938_normal.png?m=1591791660","title":"全球工单系统","url":"https://www.v2ex.com/go/gts","topics":8143,"footer":"","header":"希望这里能够为你遇到的问题找到解决方案","title_alternative":"Global Ticket System","avatar_mini":"https://cdn.v2ex.com/navatar/74bb/a227/938_mini.png?m=1591791660","stars":1578,"aliases":[],"root":false,"id":938,"parent_node_name":"geek"},"member":{"username":"dfkjgklfdjg","website":"yogwang.site","github":"yogwang","psn":"","avatar_normal":"https://cdn.v2ex.com/avatar/b3d0/4cbe/427384_mini.png?m=1562634078","bio":"","url":"https://www.v2ex.com/u/dfkjgklfdjg","tagline":"久之须自见得","twitter":"yogwang625","created":1562413713,"avatar_large":"https://cdn.v2ex.com/avatar/b3d0/4cbe/427384_mini.png?m=1562634078","avatar_mini":"https://cdn.v2ex.com/avatar/b3d0/4cbe/427384_mini.png?m=1562634078","location":"Jiaxing,China","btc":"","id":427384},"last_reply_by":"ysicing","last_touched":1620490121,"title":"关于麦当劳小程序的吐槽","url":"https://www.v2ex.com/t/775565","created":1620437280,"content":"以前一直都是 K 记 早餐，后来路面翻新 K 记 暂停营业了，就去另一头的 M 记 买早餐。\r\n一开始点餐都是小程序点餐，后来下载了 `App`，积分是同步但找不到早餐月卡，就还是在小程序内点餐。\r\n\r\n今天睡过了，就想外送到公司，不是要买外送包月卡么，然后就一直跳转\r\n\r\n1.`i 麦当劳点餐` ✈ 2.`i 麦当劳` ✈ 3.`i 麦当劳钱包` ✈ 4.`i 麦当劳` ✈ 5.`i 麦乐送` ...\r\n\r\n同一个账号 小程序 和 App 卡包不共享就算了，为啥小程序还搞那么多...有什么讲究吗？反复横跳很是恼火啊。","content_rendered":"<p>以前一直都是 K 记 早餐，后来路面翻新 K 记 暂停营业了，就去另一头的 M 记 买早餐。\n一开始点餐都是小程序点餐，后来下载了 <code>App</code>，积分是同步但找不到早餐月卡，就还是在小程序内点餐。</p>\n<p>今天睡过了，就想外送到公司，不是要买外送包月卡么，然后就一直跳转</p>\n<p>1.<code>i 麦当劳点餐</code> ✈ 2.<code>i 麦当劳</code> ✈ 3.<code>i 麦当劳钱包</code> ✈ 4.<code>i 麦当劳</code> ✈ 5.<code>i 麦乐送</code> ...</p>\n<p>同一个账号 小程序 和 App 卡包不共享就算了，为啥小程序还搞那么多...有什么讲究吗？反复横跳很是恼火啊。</p>\n","last_modified":1620450125,"replies":94,"id":775565},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/fc49/0ca4/65_large.png?m=1524891806","name":"google","avatar_normal":"https://cdn.v2ex.com/navatar/fc49/0ca4/65_normal.png?m=1524891806","title":"Google","url":"https://www.v2ex.com/go/google","topics":2572,"footer":"","header":"Google’s mission is to organize the world’s information and make it universally accessible and useful.","title_alternative":"Google","avatar_mini":"https://cdn.v2ex.com/navatar/fc49/0ca4/65_mini.png?m=1524891806","stars":3202,"aliases":[],"root":false,"id":65,"parent_node_name":"internet"},"member":{"username":"Pogbag","website":"shua1zh.top","github":"","psn":"","avatar_normal":"https://cdn.v2ex.com/avatar/a49b/0fdd/300244_mini.png?m=1609399441","bio":"","url":"https://www.v2ex.com/u/Pogbag","tagline":"","twitter":"","created":1521078466,"avatar_large":"https://cdn.v2ex.com/avatar/a49b/0fdd/300244_mini.png?m=1609399441","avatar_mini":"https://cdn.v2ex.com/avatar/a49b/0fdd/300244_mini.png?m=1609399441","location":"","btc":"","id":300244},"last_reply_by":"kaedea","last_touched":1620504877,"title":"Google Photo6 月就要关闭免费无限空间了，有好的替代方案吗？","url":"https://www.v2ex.com/t/775605","created":1620444115,"content":"目前是 iCloud 相册（主），Google photo （备），要不要充值呢，还是全部迁移到群呼 moments ？","content_rendered":"<p>目前是 iCloud 相册（主），Google photo （备），要不要充值呢，还是全部迁移到群呼 moments ？</p>\n","last_modified":1620445998,"replies":77,"id":775605},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1618811339","name":"qna","avatar_normal":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1618811339","title":"问与答","url":"https://www.v2ex.com/go/qna","topics":172186,"footer":"","header":"一个更好的世界需要你持续地提出好问题。","title_alternative":"Questions and Answers","avatar_mini":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1618811339","stars":3225,"aliases":[],"root":false,"id":12,"parent_node_name":"v2ex"},"member":{"username":"domodomo","website":null,"github":null,"psn":null,"avatar_normal":"https://cdn.v2ex.com/gravatar/60f6ea25eea64510d0ca258e620607f9?s=24&d=retro","bio":null,"url":"https://www.v2ex.com/u/domodomo","tagline":null,"twitter":null,"created":1615225655,"avatar_large":"https://cdn.v2ex.com/gravatar/60f6ea25eea64510d0ca258e620607f9?s=24&d=retro","avatar_mini":"https://cdn.v2ex.com/gravatar/60f6ea25eea64510d0ca258e620607f9?s=24&d=retro","location":null,"btc":null,"id":536660},"last_reply_by":"czfy","last_touched":1620495037,"title":"劝一个刚毕业工作不满一年的人不要裸辞去穷游一年，被人骂高高在上，指点人生，是资本的狗，是我多事了吗？","url":"https://www.v2ex.com/t/775681","created":1620462385,"content":"也许我应该说点鸡汤鼓励他去追寻自己的人生才是对的？\r\n\r\n这是对陌生人友善还是害了他？","content_rendered":"<p>也许我应该说点鸡汤鼓励他去追寻自己的人生才是对的？</p>\n<p>这是对陌生人友善还是害了他？</p>\n","last_modified":1620462385,"replies":77,"id":775681},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/70ef/df2e/17_large.png?m=1618915561","name":"create","avatar_normal":"https://cdn.v2ex.com/navatar/70ef/df2e/17_normal.png?m=1618915561","title":"分享创造","url":"https://www.v2ex.com/go/create","topics":16190,"footer":"","header":"欢迎你在这里发布自己的最新作品！","title_alternative":"Create","avatar_mini":"https://cdn.v2ex.com/navatar/70ef/df2e/17_mini.png?m=1618915561","stars":3924,"aliases":[],"root":false,"id":17,"parent_node_name":"geek"},"member":{"username":"Renovamen","website":null,"github":null,"psn":null,"avatar_normal":"https://cdn.v2ex.com/avatar/ace0/4a4e/538362_mini.png?m=1616141499","bio":null,"url":"https://www.v2ex.com/u/Renovamen","tagline":null,"twitter":null,"created":1616117509,"avatar_large":"https://cdn.v2ex.com/avatar/ace0/4a4e/538362_mini.png?m=1616141499","avatar_mini":"https://cdn.v2ex.com/avatar/ace0/4a4e/538362_mini.png?m=1616141499","location":null,"btc":null,"id":538362},"last_reply_by":"fluffyfoxxo","last_touched":1620495337,"title":"用 React 写了个仿 macOS 界面的个人主页，风格大概介于 Big Sur 和 Catalina 之间？","url":"https://www.v2ex.com/t/775582","created":1620439857,"content":"啊朋友们好，我最近在学 React，于是用 React 和 tailwindcss 仿 macOS 的界面写了个主页，风格大应该介于 Big Sur 和 Catalina 之间，换句话说我把这俩版本里我喜欢的部分拿出来拼凑到了一起，再换句话说我的 mac 的硬盘空间不够升级 Big Sur，于是有些细节我只能参照现在用的 Catalina 来补...\r\n\r\n- 网页地址： https://portfolio.zxh.io/\r\n- Github： https://github.com/Renovamen/playground-macos\r\n\r\n开始写这个项目两三天之后我才发现了这个用 React 写 Ubuntu 的作品： https://vivek9patel.github.io （真的太强了，是我论坛逛少了我的错），而在刚刚准备发帖的时候我才发现了这个用 Vue 写 Deepin 的作品： https://GoodManWEN.github.io （真的太强了，是我论坛逛少了我的错），所以我并不是第一个（甚至不是前几个）想出这个主意的天才 hhh 。不管怎么说那个仿 Ubuntu 的项目给了我很多参考，非常感谢。\r\n\r\n因为对 React 不熟（严格来说这第一个 React 项目），主业也不是前端，所以代码可能看上去会比较乱，并且我用了大量的 class component （似乎 react 社区相比 class 更推崇 hook 一点？虽然我目前还没能理解这是为什么，甚至我连 hook 的用法都还没理解的太清楚），所以先提前抱歉。\r\n\r\n最后感谢一切反馈和建议，虽然这个月我比较忙可能没太多时间改进它...","content_rendered":"<p>啊朋友们好，我最近在学 React，于是用 React 和 tailwindcss 仿 macOS 的界面写了个主页，风格大应该介于 Big Sur 和 Catalina 之间，换句话说我把这俩版本里我喜欢的部分拿出来拼凑到了一起，再换句话说我的 mac 的硬盘空间不够升级 Big Sur，于是有些细节我只能参照现在用的 Catalina 来补...</p>\n<ul>\n<li>网页地址： <a href=\"https://portfolio.zxh.io/\" rel=\"nofollow\">https://portfolio.zxh.io/</a></li>\n<li>Github： <a href=\"https://github.com/Renovamen/playground-macos\" rel=\"nofollow\">https://github.com/Renovamen/playground-macos</a></li>\n</ul>\n<p>开始写这个项目两三天之后我才发现了这个用 React 写 Ubuntu 的作品： <a href=\"https://vivek9patel.github.io\" rel=\"nofollow\">https://vivek9patel.github.io</a> （真的太强了，是我论坛逛少了我的错），而在刚刚准备发帖的时候我才发现了这个用 Vue 写 Deepin 的作品： <a href=\"https://GoodManWEN.github.io\" rel=\"nofollow\">https://GoodManWEN.github.io</a> （真的太强了，是我论坛逛少了我的错），所以我并不是第一个（甚至不是前几个）想出这个主意的天才 hhh 。不管怎么说那个仿 Ubuntu 的项目给了我很多参考，非常感谢。</p>\n<p>因为对 React 不熟（严格来说这第一个 React 项目），主业也不是前端，所以代码可能看上去会比较乱，并且我用了大量的 class component （似乎 react 社区相比 class 更推崇 hook 一点？虽然我目前还没能理解这是为什么，甚至我连 hook 的用法都还没理解的太清楚），所以先提前抱歉。</p>\n<p>最后感谢一切反馈和建议，虽然这个月我比较忙可能没太多时间改进它...</p>\n","last_modified":1620439857,"replies":72,"id":775582},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1620107083","name":"programmer","avatar_normal":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1620107083","title":"程序员","url":"https://www.v2ex.com/go/programmer","topics":44394,"footer":"","header":"While code monkeys are not eating bananas, they're coding.","title_alternative":"Programmer","avatar_mini":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1620107083","stars":7365,"aliases":[],"root":false,"id":300,"parent_node_name":"computer"},"member":{"username":"yohole","website":null,"github":null,"psn":null,"avatar_normal":"https://cdn.v2ex.com/avatar/7eca/e1ab/202443_mini.png?m=1602483254","bio":null,"url":"https://www.v2ex.com/u/yohole","tagline":null,"twitter":null,"created":1479803109,"avatar_large":"https://cdn.v2ex.com/avatar/7eca/e1ab/202443_mini.png?m=1602483254","avatar_mini":"https://cdn.v2ex.com/avatar/7eca/e1ab/202443_mini.png?m=1602483254","location":null,"btc":null,"id":202443},"last_reply_by":"shovo","last_touched":1620480147,"title":"阿里云盘是否存在增加一键转存百度云盘文件（或者其他云盘）的可能性？","url":"https://www.v2ex.com/t/775566","created":1620437301,"content":"本人私以为阿里云目前优势在于一般会员的下载速度，劣势在于其生态。\r\n目前我自己（或者说绝大部分人）还没有把阿里云用起来的最大原因就是过去很多存量文件还是存放在百度云，对其依赖性还是比较强。\r\n\r\n目前最常见的场景是：\r\n\r\n网上自主或者身边的人给到一个资源的链接是百度云文件链接，此时阿里云盘还不能很好地切入，所以我在想，后续阿里云盘是否会增加一个一键转存百度云盘文件的功能（其实就是简单利用阿里云的高带宽后台离线下载该文件），转存 /下载完成之后，该文件就存在于阿里云盘的体系中，此时分享、下载都是可以的\r\n\r\n不知道这个功能是否存在合规合法性？还是有其他考虑以后不会出现？","content_rendered":"<p>本人私以为阿里云目前优势在于一般会员的下载速度，劣势在于其生态。\n目前我自己（或者说绝大部分人）还没有把阿里云用起来的最大原因就是过去很多存量文件还是存放在百度云，对其依赖性还是比较强。</p>\n<p>目前最常见的场景是：</p>\n<p>网上自主或者身边的人给到一个资源的链接是百度云文件链接，此时阿里云盘还不能很好地切入，所以我在想，后续阿里云盘是否会增加一个一键转存百度云盘文件的功能（其实就是简单利用阿里云的高带宽后台离线下载该文件），转存 /下载完成之后，该文件就存在于阿里云盘的体系中，此时分享、下载都是可以的</p>\n<p>不知道这个功能是否存在合规合法性？还是有其他考虑以后不会出现？</p>\n","last_modified":1620437301,"replies":66,"id":775566},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1620107083","name":"programmer","avatar_normal":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1620107083","title":"程序员","url":"https://www.v2ex.com/go/programmer","topics":44394,"footer":"","header":"While code monkeys are not eating bananas, they're coding.","title_alternative":"Programmer","avatar_mini":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1620107083","stars":7365,"aliases":[],"root":false,"id":300,"parent_node_name":"computer"},"member":{"username":"iceteacover","website":"","github":"sunjirepo","psn":"","avatar_normal":"https://cdn.v2ex.com/avatar/f46f/cf4d/264499_mini.png?m=1614076152","bio":"","url":"https://www.v2ex.com/u/iceteacover","tagline":"","twitter":"","created":1509620492,"avatar_large":"https://cdn.v2ex.com/avatar/f46f/cf4d/264499_mini.png?m=1614076152","avatar_mini":"https://cdn.v2ex.com/avatar/f46f/cf4d/264499_mini.png?m=1614076152","location":"","btc":"","id":264499},"last_reply_by":"drackzy","last_touched":1620497118,"title":"迫于面试要求 Go，请教下各位 Javaer 是否有必要学习 Go，未来职场收益如何？","url":"https://www.v2ex.com/t/775583","created":1620439887,"content":"本人 Java 工程师，最近换工作，碰到字节和 B 站的后端岗位要求用 Go 。想问问各位 Java 或者 Go 工程师，现在是否有必要去学习 Go，未来职场收益如何？或者说 Go 会不会替代 Java，如果有 Java 转 Go 经验的大佬来谈一谈更好。","content_rendered":"<p>本人 Java 工程师，最近换工作，碰到字节和 B 站的后端岗位要求用 Go 。想问问各位 Java 或者 Go 工程师，现在是否有必要去学习 Go，未来职场收益如何？或者说 Go 会不会替代 Java，如果有 Java 转 Go 经验的大佬来谈一谈更好。</p>\n","last_modified":1620439887,"replies":59,"id":775583},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/a5e0/0132/146_large.png?m=1594135486","name":"js","avatar_normal":"https://cdn.v2ex.com/navatar/a5e0/0132/146_normal.png?m=1594135486","title":"JavaScript","url":"https://www.v2ex.com/go/js","topics":2573,"footer":"","header":"JavaScript (sometimes abbreviated JS) is a prototype-based scripting language that is dynamic, weakly typed and has first-class functions.","title_alternative":"JavaScript","avatar_mini":"https://cdn.v2ex.com/navatar/a5e0/0132/146_mini.png?m=1594135486","stars":2594,"aliases":[],"root":false,"id":146,"parent_node_name":"programming"},"member":{"username":"xieqiqiang00","website":null,"github":null,"psn":null,"avatar_normal":"https://cdn.v2ex.com/gravatar/f185eed64fdd36a2ca783a6705dec163?s=24&d=retro","bio":null,"url":"https://www.v2ex.com/u/xieqiqiang00","tagline":null,"twitter":null,"created":1563785579,"avatar_large":"https://cdn.v2ex.com/gravatar/f185eed64fdd36a2ca783a6705dec163?s=24&d=retro","avatar_mini":"https://cdn.v2ex.com/gravatar/f185eed64fdd36a2ca783a6705dec163?s=24&d=retro","location":null,"btc":null,"id":431158},"last_reply_by":"musi","last_touched":1620500937,"title":"JS 有什么手段可以判断一个函数是不是原生代码吗？","url":"https://www.v2ex.com/t/775677","created":1620462127,"content":"比如 XMLHttpRequest，有没有什么手段可以知道这个东西有没有被人为重写？\r\n<br>\r\n网站找了不少方法都做不到\r\n<br>\r\n下面是我做的一些尝试，这些检测方法都能被绕过\r\n```\r\n{\r\n    function isNative(api) {\r\n        return /native code/.test(api.toString()) && typeof api !== 'undefined'\r\n    }\r\n\r\n    let test = function (input, fake) {\r\n        console.log(\"------------------------\")\r\n        console.log(\"是否是伪造:\", fake)\r\n        console.log(\"toString:\", input.toString())\r\n        console.log(\"toString.toString:\", input.toString)\r\n        console.log(\"prototype 方法\", input.hasOwnProperty(\"prototype\"))\r\n        console.log(\"toString.call\",\"方法\",Function.prototype.toString.call(input))\r\n        console.log(\"网传最不靠谱方法：isNative\", isNative(input))\r\n    }\r\n    test(XMLHttpRequest, false)\r\n    {\r\n        let XMLHttpRequest = function () {\r\n            \"[native code]\"\r\n        }\r\n        XMLHttpRequest.toString = function () {\r\n            return \"function XMLHttpRequest() { [native code] }\"\r\n        }\r\n        let toString = function () {\r\n            return \"function toString() { [native code] }\"\r\n        }\r\n        toString.toString = toString\r\n        XMLHttpRequest.toString.toString = toString\r\n        Function.prototype.toString = toString\r\n        delete XMLHttpRequest.prototype\r\n        test(XMLHttpRequest, true)\r\n        // XMLHttpRequest.prototype = undefined\r\n        // test(XMLHttpRequest, true)\r\n    }\r\n}\r\n```","content_rendered":"<p>比如 XMLHttpRequest，有没有什么手段可以知道这个东西有没有被人为重写？\n<br/>\n网站找了不少方法都做不到\n<br/>\n下面是我做的一些尝试，这些检测方法都能被绕过</p>\n<pre><code>{\n    function isNative(api) {\n        return /native code/.test(api.toString()) &amp;&amp; typeof api !== 'undefined'\n    }\n\n    let test = function (input, fake) {\n        console.log(\"------------------------\")\n        console.log(\"是否是伪造:\", fake)\n        console.log(\"toString:\", input.toString())\n        console.log(\"toString.toString:\", input.toString)\n        console.log(\"prototype 方法\", input.hasOwnProperty(\"prototype\"))\n        console.log(\"toString.call\",\"方法\",Function.prototype.toString.call(input))\n        console.log(\"网传最不靠谱方法：isNative\", isNative(input))\n    }\n    test(XMLHttpRequest, false)\n    {\n        let XMLHttpRequest = function () {\n            \"[native code]\"\n        }\n        XMLHttpRequest.toString = function () {\n            return \"function XMLHttpRequest() { [native code] }\"\n        }\n        let toString = function () {\n            return \"function toString() { [native code] }\"\n        }\n        toString.toString = toString\n        XMLHttpRequest.toString.toString = toString\n        Function.prototype.toString = toString\n        delete XMLHttpRequest.prototype\n        test(XMLHttpRequest, true)\n        // XMLHttpRequest.prototype = undefined\n        // test(XMLHttpRequest, true)\n    }\n}\n</code></pre>\n","last_modified":1620462273,"replies":59,"id":775677},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1620107083","name":"programmer","avatar_normal":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1620107083","title":"程序员","url":"https://www.v2ex.com/go/programmer","topics":44394,"footer":"","header":"While code monkeys are not eating bananas, they're coding.","title_alternative":"Programmer","avatar_mini":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1620107083","stars":7365,"aliases":[],"root":false,"id":300,"parent_node_name":"computer"},"member":{"username":"jujuxia","website":null,"github":null,"psn":null,"avatar_normal":"https://cdn.v2ex.com/gravatar/e0f7e957b38c2d3d2d669f8fa73e82ba?s=24&d=retro","bio":null,"url":"https://www.v2ex.com/u/jujuxia","tagline":null,"twitter":null,"created":1515044469,"avatar_large":"https://cdn.v2ex.com/gravatar/e0f7e957b38c2d3d2d669f8fa73e82ba?s=24&d=retro","avatar_mini":"https://cdn.v2ex.com/gravatar/e0f7e957b38c2d3d2d669f8fa73e82ba?s=24&d=retro","location":null,"btc":null,"id":279582},"last_reply_by":"xunbug","last_touched":1620483157,"title":"亲身体验，测试真的太卷了，非引战帖","url":"https://www.v2ex.com/t/775642","created":1620455674,"content":"测试真的太卷了，作为一个前端莫名其妙来了测试团队， 一群测试抢着你的活干，让你教他………  做的东西真杂","content_rendered":"<p>测试真的太卷了，作为一个前端莫名其妙来了测试团队， 一群测试抢着你的活干，让你教他………  做的东西真杂</p>\n","last_modified":1620455674,"replies":55,"id":775642},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/d3d9/4468/10_large.png?m=1615111860","name":"mbp","avatar_normal":"https://cdn.v2ex.com/navatar/d3d9/4468/10_normal.png?m=1615111860","title":"MacBook Pro","url":"https://www.v2ex.com/go/mbp","topics":6957,"footer":"","header":"State-of-the-art processors. All-new graphics. Breakthrough high-speed I/O. Three very big leaps forward.","title_alternative":"MacBook Pro","avatar_mini":"https://cdn.v2ex.com/navatar/d3d9/4468/10_mini.png?m=1615111860","stars":2879,"aliases":[],"root":false,"id":10,"parent_node_name":"apple"},"member":{"username":"Biwood","website":"","github":"oodzchen","psn":"","avatar_normal":"https://cdn.v2ex.com/avatar/4473/d870/60109_mini.png?m=1619246213","bio":"web developer","url":"https://www.v2ex.com/u/Biwood","tagline":"","twitter":"","created":1397149800,"avatar_large":"https://cdn.v2ex.com/avatar/4473/d870/60109_mini.png?m=1619246213","avatar_mini":"https://cdn.v2ex.com/avatar/4473/d870/60109_mini.png?m=1619246213","location":"","btc":"","id":60109},"last_reply_by":"israinbow","last_touched":1620490899,"title":"生活在南方的朋友是不是都不怎么用触控板？","url":"https://www.v2ex.com/t/775715","created":1620468579,"content":"从北方搬到南方工作，最大的感触就是因为天气炎热+空气潮湿，手指皮肤上一直冒汗，使用触控板的时候感觉阻力好大啊，没有在北方时那么干爽顺滑了，针对这个问题有什么解决方案吗，滑着滑着手都疼了","content_rendered":"从北方搬到南方工作，最大的感触就是因为天气炎热+空气潮湿，手指皮肤上一直冒汗，使用触控板的时候感觉阻力好大啊，没有在北方时那么干爽顺滑了，针对这个问题有什么解决方案吗，滑着滑着手都疼了","last_modified":1620468755,"replies":28,"id":775715},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1620107083","name":"programmer","avatar_normal":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1620107083","title":"程序员","url":"https://www.v2ex.com/go/programmer","topics":44389,"footer":"","header":"While code monkeys are not eating bananas, they're coding.","title_alternative":"Programmer","avatar_mini":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1620107083","stars":7364,"aliases":[],"root":false,"id":300,"parent_node_name":"computer"},"member":{"username":"forsigner","website":"https://github.com/forsigner/","github":"","psn":"","avatar_normal":"https://cdn.v2ex.com/avatar/1f58/4098/159198_mini.png?m=1455692741","bio":"","url":"https://www.v2ex.com/u/forsigner","tagline":"Find the bug of the world.","twitter":"","created":1455692599,"avatar_large":"https://cdn.v2ex.com/avatar/1f58/4098/159198_mini.png?m=1455692741","avatar_mini":"https://cdn.v2ex.com/avatar/1f58/4098/159198_mini.png?m=1455692741","location":"珠海","btc":"","id":159198},"last_reply_by":"forsigner","last_touched":1620456029,"title":"一个开发者优先 (developer-first) 的布局引擎","url":"https://www.v2ex.com/t/775608","created":1620445041,"content":"我又来 v2 发文章了，还是 v2 社区好，有良好的社区氛围，大家能用心的交流，我以后不会在掘金、知乎、segmentfault 等社区发表技术文章，因为几乎不会有阅读量，也没有人交流。\r\n\r\n首先，这篇文章是个标题党，这里先给大家致歉，因为下面介绍的并不能称之为布局引擎，真正的布局引擎应该是这样的：[yogalayout]( https://yogalayout.com/)。不过建议你一定要读完这篇标题党文章，读完后一定会有收获。\r\n\r\n## 为什么会有这篇文章\r\n\r\n两周前，我发布了我的一个前端开源项目，名字为：[Fower]( https://github.com/forsigner/fower)。很多用户问我，Fower 和 Tailwindcss 有什么不同，我的回答是 Fower 在 utilty-first 这一点，理念是和 Tailwindcss 一致的，实际上 utilty-first 理念的 CSS 框架很早就有，比如：[ACSS]( https://acss.io/)、[Tachyons]( https://tachyons.io/)。\r\n\r\n其中，Fower 和 Tailwindcss 最大的不同点之一，就是 Fower 提供了非常易用的布局工具: Fower Layout toolkit，这样是写这篇文章的缘由。下面会详细分享开发 Fower layout 的初衷和其设计思路。\r\n\r\n## 布局发展史\r\n\r\nFower Layout 要解决的问题就是布局问题，让我们简单回顾一下 Web 布局的发展史。在 Web 布局整个演进过程当中，经历了没有任何布局、表格布局、定位布局、浮动布局、Flexbox 布局、Grid 布局。\r\n\r\n这里不细说每种布局的特点和优缺点，我只说我的观点和结论：在当前阶段，从功能性、易用性、浏览器兼容性等方面考虑，使用 Flexbox 布局是最好的选择。当然有兴趣的同学可以阅读下面的资料。\r\n\r\n- [聊聊 CSS 中的布局模式]( https://juejin.cn/post/6844903636602978318)\r\n- [前端布局基础概述]( https://juejin.cn/post/6844903583331123214)\r\n- [网页布局简史]( https://zhuanlan.zhihu.com/p/104927765)\r\n- [Web layout history]( http://grid-layout.com/history.html)\r\n- [Flexbox]( https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox)\r\n- [CSS Grid Layout]( https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout)\r\n\r\n## 布局的核心\r\n\r\n我认为，布局的核心是处理容器和元素 (container and item)在某一方向 (x，y)的空间关系。这里有几个关键要素：容器、元素、方向、空间关系。实际上，这也是 flexbox 布局核心的东西，flexbox 布局几乎所有概念和用法都是围绕这四个要素展开的。我们在拿到一个设计稿时，如果能快速地识别出其中的容器、元素，并且理清他们的空间关系，便能很快速地去实现它。\r\n\r\n## 设计软件布局方式\r\n\r\n![]( https://fower.vercel.app/img/layout-sketch.png)\r\n![]( https://fower.vercel.app/img/layout-figma.png)\r\n\r\nFigma 和 Sketch 是两款非常出名的设计软件，我们可以看到，在元素空间关系的处理上，它们一致使用非常形象的指令: align to top 、align to right 、align to bottom 、align to left 、align base on space. 这也是最符合人直觉的方式。\r\n\r\n## Layout In Swift UI and Flutter\r\n\r\n接下来我们看看两个现代化的 UI 解决方案：Swift UI 和 Flutter，它们是怎么处理 UI 布局的。\r\n\r\n在 Swift UI，我们可以看到 HStack 、VStack 、aligment 、space 等关键字，我们发现 Swift UI 也是围绕 容器、元素、方向、空间关系四个要素展开的:\r\n\r\n```js\r\nstruct ContentView: View {\r\n    var body: some View {\r\n        HStack(alignment: .top) {\r\n            VStack {\r\n                CalendarView()\r\n                Spacer()\r\n            }\r\n            VStack(alignment: .leading) {\r\n                Text(\"Event title\").font(.title)\r\n                Text(\"Location\")\r\n            }\r\n            Spacer()\r\n        }.padding()\r\n    }\r\n}\r\n```\r\n\r\n在 Flutter 中，我们可以看到 Row 、Column 、aligment 、space 等关键字，我们发现 Flutter 也是围绕 容器、元素、方向、空间关系四个要素展开的:\r\n\r\n```js\r\nRow(\r\n  mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n  children: [\r\n    Image.asset('images/pic1.jpg'),\r\n    Image.asset('images/pic2.jpg'),\r\n    Image.asset('images/pic3.jpg'),\r\n  ],\r\n);\r\n\r\nColumn(\r\n  mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n  children: [\r\n    Image.asset('images/pic1.jpg'),\r\n    Image.asset('images/pic2.jpg'),\r\n    Image.asset('images/pic3.jpg'),\r\n  ],\r\n);\r\n```\r\n\r\n我们发现，Swift UI 和 Flutter 的布局理念和 Flexbox 布局极其类似，另外，我们发现它们的布局代码是直接依附在容器和元素中的，不像传统的 Web，需要补样式代码单独分离到一个 CSS 文件中。Fower 同样这样的理念，样式就是应该容器和元素的一部分。\r\n\r\nSome references:\r\n\r\n- https://www.swiftbysundell.com/articles/swiftui-layout-system-guide-part-1/\r\n- https://flutter.dev/docs/development/ui/layout\r\n\r\n## Flexbox 布局的缺点\r\n\r\n上面说了设计软件和现代化 UI 框架的布局方式，他们和 Flexbox 布局的理念非常类似，那 Flexbox 布局有什么缺点呢？ Flexbox 非常优秀，但对于我来说它有一个最大的缺点就是易用性不够好。它有很多概念：主轴、交叉轴、方向、align-item 、justify-content 、flex-start 、flex-end 、flex-center 等。最大问题是，主轴的方向发生改变时，`align-items`, `justify-content` 的 UI 表现非常不符合人的直觉。特别是对于我这个不是永远都是在写 UI 的人 (我经常需要去写后端、打杂等)，每隔一段时间，就很可能忘记`align-items`, `justify-content`的用法。\r\n\r\n## 我理想中的布局方式 (方案设计)\r\n\r\n上面聊了 Flexbox layout 的缺点：易用性不够好。我理想中布局方式的使用，应该像现代设计软件一样好用，我们只需关注布局四要素容器、元素、方向、空间关系，用法就是找到容器和元素，设置容器内元素的方向，然后设置空间关系。这里核心是如何表达空间关系，我觉得最符合人直觉的表达方式就是设计软件的方案。我把这种表达方式抽象为：toCenter, toCenterX, toCenterY, toTop, toRight, toBottom, toLeft, toBetween, toAround, toEvenly.\r\n\r\n- **toCenter**, make children elements align to center, see [Online Demo]( https://fower.vercel.app/docs/to-center)\r\n- **toCenterX**, make children elements align to center horizontal, see [Online Demo]( https://fower.vercel.app/docs/to-center-x)\r\n- **toCenterY**, make children elements align to center vertical, see [Online Demo]( https://fower.vercel.app/docs/to-center-y)\r\n- **toTop**, make children elements align to left, see [Online Demo]( https://fower.vercel.app/docs/to-left)\r\n- **toRight**, make children elements align to right, see [Online Demo]( https://fower.vercel.app/docs/to-right)\r\n- **toBottom**, make children elements align to bottom, see [Online Demo]( https://fower.vercel.app/docs/to-bottom)\r\n- **toLeft**, make children elements align to left, see [Online Demo]( https://fower.vercel.app/docs/to-left)\r\n- **toBetween**, make children elements space between, see [Online Demo]( https://fower.vercel.app/docs/to-between)\r\n- **toEvenly**, make children elements space evenly, see [Online Demo]( https://fower.vercel.app/docs/to-evenly)\r\n- **toAround**, make children elements space around, see [Online Demo]( https://fower.vercel.app/docs/to-around)\r\n\r\n不管你的容器是水平方向 (row) 还是垂直方向 (column)，toRight 、toBottom 这些空间关系表达，都会符合你视觉习惯。\r\n\r\n这种抽象的表达方式为什么更好呢？我觉的有几点好处：\r\n\r\n- 更符合人的直觉，你只需记住按照方向处理空间关系，比如：toRight 、toBotom 等，没有什么比这更符合人的直觉，另外的好处的是你的记忆负担会变得非常小\r\n- 更少地代码，这种方式会让你代码更少，可维护性更强，开发效率更高\r\n\r\n我理想中的代码编写方式(伪代码)：\r\n\r\n1.下面代码会自动把容器内的元素水平和垂直居中，容器默认是 row, 所以可以省去：\r\n\r\n```html\r\n<Container toCenter>\r\n  <ItemA />\r\n</Container>\r\n```\r\n\r\n效果如下：\r\n![]( https://fower.vercel.app/img/layout-1.png)\r\n\r\n2.下面代码会把 A,B,C 三个个元素在容器内靠右对齐, 容器默认是 row, 所以可以省去：\r\n\r\n```jsx\r\n<Container toRight>\r\n  <ItemA />\r\n  <ItemB />\r\n  <ItemC />\r\n</Container>\r\n```\r\n\r\n效果如下：\r\n![]( https://fower.vercel.app/img/layout-2.png)\r\n\r\n3.下面代码会把 A,B 两个元素在容器内靠右对齐, 我们声明了 column, 所以元素是竖着排列的：\r\n\r\n```jsx\r\n<Container column toRight>\r\n  <ItemA />\r\n  <ItemB />\r\n</Container>\r\n```\r\n\r\n效果如下：\r\n![]( https://fower.vercel.app/img/layout-3.png)\r\n\r\n4. 使用组合：\r\n\r\n```jsx\r\n<Container toBetween toCenterY>\r\n  <ItemA />\r\n  <ItemB />\r\n  <ItemC />\r\n</Container>\r\n```\r\n\r\n效果如下：\r\n![]( https://fower.vercel.app/img/layout-4.png)\r\n\r\n这里只举这四个伪代码例子，实际上你可以使用 \"toLeft\", \"toRight\" 等这些指令实现大部分 UI 布局。\r\n\r\n上面，我们抽象了空间关系的表达方式，并把指令作用于容器上。下面我们来看一个布局效果，你会怎么实现它：\r\n\r\n![]( https://fower.vercel.app/img/layout-5.png)\r\n\r\n下面说说我理想中的方案，伪代码如下：\r\n\r\n```jsx\r\n<Container toBetween toCenterY>\r\n  <ItemA />\r\n  <ItemB selfBottom />\r\n  <ItemC />\r\n</Container>\r\n```\r\n\r\n这里我们抽象出另外一类指令：selfTop, selfRight, selfBottom, selfLeft, selfStretch. 这些指令可以作用在元素上，单独控制元素的定位对齐方式。\r\n\r\n所以我们有一些作用于元素的指令：\r\n\r\n- **selfTop**, make elements seft align to top\r\n- **selfRight**, make elements seft align to right\r\n- **selfBottom**, make elements seft align to bottom\r\n- **selfLeft**, make elements seft align to left\r\n- **selfStretch**, make elements seft to Stretch\r\n\r\n最后，总结一下我们布局工具设计方案：\r\n\r\n-  [容器] 方向控制指令，使用 row, column, 如果未声明，默认为 row\r\n-  [容器] 内元素对齐方式指令: toCenter, toCenterX, toCenterY, toTop, toRight, toBottom, toLeft, toBetween, toAround, toEvenly，使用这些指令控制子元素对齐方式，并且和 row, column 方向无关\r\n-  [元素] 自身对齐方式指令：selfTop, selfRight, selfBottom, selfLeft, selfStretch. 这些指令单独控制元素自身对齐方式\r\n- 使用任何 [容器] 指令，会自动触发 flexbox 布局，无需手动设置 `display: flex;`\r\n\r\n上面 4 条规则设计，就是我个人理想中的布局方式。\r\n\r\n## Fower Layout\r\n\r\n回到我们的标题：一个开发者优先(developer-first)的布局引擎。 实际上，Fower Layout 不能称之为布局引擎，那是什么？ 也许我们称其为 Layout tookkit 会更合适。\r\n\r\nFower Layout 的最大特点是 developer-first，它易于使用并且符合人们的直觉。\r\n\r\n实际上，即使你不使用 Fower Layout, 你也可以使用上面提到的设计思想去实现一套好用的布局工具，而不是使用原始的 Flex Layout 。\r\n\r\n关于 Fower Layout 更详细的信息，可以看看官方文档的介绍：[Fower Layout Introduction]( https://fower.vercel.app/docs/fower-layout-introduction)。","content_rendered":"<p>我又来 v2 发文章了，还是 v2 社区好，有良好的社区氛围，大家能用心的交流，我以后不会在掘金、知乎、segmentfault 等社区发表技术文章，因为几乎不会有阅读量，也没有人交流。</p>\n<p>首先，这篇文章是个标题党，这里先给大家致歉，因为下面介绍的并不能称之为布局引擎，真正的布局引擎应该是这样的：<a href=\"https://yogalayout.com/\" rel=\"nofollow\">yogalayout</a>。不过建议你一定要读完这篇标题党文章，读完后一定会有收获。</p>\n<h2>为什么会有这篇文章</h2>\n<p>两周前，我发布了我的一个前端开源项目，名字为：<a href=\"https://github.com/forsigner/fower\" rel=\"nofollow\">Fower</a>。很多用户问我，Fower 和 Tailwindcss 有什么不同，我的回答是 Fower 在 utilty-first 这一点，理念是和 Tailwindcss 一致的，实际上 utilty-first 理念的 CSS 框架很早就有，比如：<a href=\"https://acss.io/\" rel=\"nofollow\">ACSS</a>、<a href=\"https://tachyons.io/\" rel=\"nofollow\">Tachyons</a>。</p>\n<p>其中，Fower 和 Tailwindcss 最大的不同点之一，就是 Fower 提供了非常易用的布局工具: Fower Layout toolkit，这样是写这篇文章的缘由。下面会详细分享开发 Fower layout 的初衷和其设计思路。</p>\n<h2>布局发展史</h2>\n<p>Fower Layout 要解决的问题就是布局问题，让我们简单回顾一下 Web 布局的发展史。在 Web 布局整个演进过程当中，经历了没有任何布局、表格布局、定位布局、浮动布局、Flexbox 布局、Grid 布局。</p>\n<p>这里不细说每种布局的特点和优缺点，我只说我的观点和结论：在当前阶段，从功能性、易用性、浏览器兼容性等方面考虑，使用 Flexbox 布局是最好的选择。当然有兴趣的同学可以阅读下面的资料。</p>\n<ul>\n<li><a href=\"https://juejin.cn/post/6844903636602978318\" rel=\"nofollow\">聊聊 CSS 中的布局模式</a></li>\n<li><a href=\"https://juejin.cn/post/6844903583331123214\" rel=\"nofollow\">前端布局基础概述</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/104927765\" rel=\"nofollow\">网页布局简史</a></li>\n<li><a href=\"http://grid-layout.com/history.html\" rel=\"nofollow\">Web layout history</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox\" rel=\"nofollow\">Flexbox</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout\" rel=\"nofollow\">CSS Grid Layout</a></li>\n</ul>\n<h2>布局的核心</h2>\n<p>我认为，布局的核心是处理容器和元素 (container and item)在某一方向 (x，y)的空间关系。这里有几个关键要素：容器、元素、方向、空间关系。实际上，这也是 flexbox 布局核心的东西，flexbox 布局几乎所有概念和用法都是围绕这四个要素展开的。我们在拿到一个设计稿时，如果能快速地识别出其中的容器、元素，并且理清他们的空间关系，便能很快速地去实现它。</p>\n<h2>设计软件布局方式</h2>\n<p><img alt=\"\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://fower.vercel.app/img/layout-sketch.png\"/>\n<img alt=\"\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://fower.vercel.app/img/layout-figma.png\"/></p>\n<p>Figma 和 Sketch 是两款非常出名的设计软件，我们可以看到，在元素空间关系的处理上，它们一致使用非常形象的指令: align to top 、align to right 、align to bottom 、align to left 、align base on space. 这也是最符合人直觉的方式。</p>\n<h2>Layout In Swift UI and Flutter</h2>\n<p>接下来我们看看两个现代化的 UI 解决方案：Swift UI 和 Flutter，它们是怎么处理 UI 布局的。</p>\n<p>在 Swift UI，我们可以看到 HStack 、VStack 、aligment 、space 等关键字，我们发现 Swift UI 也是围绕 容器、元素、方向、空间关系四个要素展开的:</p>\n<pre><code class=\"language-js\">struct ContentView: View {\n    var body: some View {\n        HStack(alignment: .top) {\n            VStack {\n                CalendarView()\n                Spacer()\n            }\n            VStack(alignment: .leading) {\n                Text(\"Event title\").font(.title)\n                Text(\"Location\")\n            }\n            Spacer()\n        }.padding()\n    }\n}\n</code></pre>\n<p>在 Flutter 中，我们可以看到 Row 、Column 、aligment 、space 等关键字，我们发现 Flutter 也是围绕 容器、元素、方向、空间关系四个要素展开的:</p>\n<pre><code class=\"language-js\">Row(\n  mainAxisAlignment: MainAxisAlignment.spaceEvenly,\n  children: [\n    Image.asset('images/pic1.jpg'),\n    Image.asset('images/pic2.jpg'),\n    Image.asset('images/pic3.jpg'),\n  ],\n);\n\nColumn(\n  mainAxisAlignment: MainAxisAlignment.spaceEvenly,\n  children: [\n    Image.asset('images/pic1.jpg'),\n    Image.asset('images/pic2.jpg'),\n    Image.asset('images/pic3.jpg'),\n  ],\n);\n</code></pre>\n<p>我们发现，Swift UI 和 Flutter 的布局理念和 Flexbox 布局极其类似，另外，我们发现它们的布局代码是直接依附在容器和元素中的，不像传统的 Web，需要补样式代码单独分离到一个 CSS 文件中。Fower 同样这样的理念，样式就是应该容器和元素的一部分。</p>\n<p>Some references:</p>\n<ul>\n<li><a href=\"https://www.swiftbysundell.com/articles/swiftui-layout-system-guide-part-1/\" rel=\"nofollow\">https://www.swiftbysundell.com/articles/swiftui-layout-system-guide-part-1/</a></li>\n<li><a href=\"https://flutter.dev/docs/development/ui/layout\" rel=\"nofollow\">https://flutter.dev/docs/development/ui/layout</a></li>\n</ul>\n<h2>Flexbox 布局的缺点</h2>\n<p>上面说了设计软件和现代化 UI 框架的布局方式，他们和 Flexbox 布局的理念非常类似，那 Flexbox 布局有什么缺点呢？ Flexbox 非常优秀，但对于我来说它有一个最大的缺点就是易用性不够好。它有很多概念：主轴、交叉轴、方向、align-item 、justify-content 、flex-start 、flex-end 、flex-center 等。最大问题是，主轴的方向发生改变时，<code>align-items</code>, <code>justify-content</code> 的 UI 表现非常不符合人的直觉。特别是对于我这个不是永远都是在写 UI 的人 (我经常需要去写后端、打杂等)，每隔一段时间，就很可能忘记<code>align-items</code>, <code>justify-content</code>的用法。</p>\n<h2>我理想中的布局方式 (方案设计)</h2>\n<p>上面聊了 Flexbox layout 的缺点：易用性不够好。我理想中布局方式的使用，应该像现代设计软件一样好用，我们只需关注布局四要素容器、元素、方向、空间关系，用法就是找到容器和元素，设置容器内元素的方向，然后设置空间关系。这里核心是如何表达空间关系，我觉得最符合人直觉的表达方式就是设计软件的方案。我把这种表达方式抽象为：toCenter, toCenterX, toCenterY, toTop, toRight, toBottom, toLeft, toBetween, toAround, toEvenly.</p>\n<ul>\n<li><strong>toCenter</strong>, make children elements align to center, see <a href=\"https://fower.vercel.app/docs/to-center\" rel=\"nofollow\">Online Demo</a></li>\n<li><strong>toCenterX</strong>, make children elements align to center horizontal, see <a href=\"https://fower.vercel.app/docs/to-center-x\" rel=\"nofollow\">Online Demo</a></li>\n<li><strong>toCenterY</strong>, make children elements align to center vertical, see <a href=\"https://fower.vercel.app/docs/to-center-y\" rel=\"nofollow\">Online Demo</a></li>\n<li><strong>toTop</strong>, make children elements align to left, see <a href=\"https://fower.vercel.app/docs/to-left\" rel=\"nofollow\">Online Demo</a></li>\n<li><strong>toRight</strong>, make children elements align to right, see <a href=\"https://fower.vercel.app/docs/to-right\" rel=\"nofollow\">Online Demo</a></li>\n<li><strong>toBottom</strong>, make children elements align to bottom, see <a href=\"https://fower.vercel.app/docs/to-bottom\" rel=\"nofollow\">Online Demo</a></li>\n<li><strong>toLeft</strong>, make children elements align to left, see <a href=\"https://fower.vercel.app/docs/to-left\" rel=\"nofollow\">Online Demo</a></li>\n<li><strong>toBetween</strong>, make children elements space between, see <a href=\"https://fower.vercel.app/docs/to-between\" rel=\"nofollow\">Online Demo</a></li>\n<li><strong>toEvenly</strong>, make children elements space evenly, see <a href=\"https://fower.vercel.app/docs/to-evenly\" rel=\"nofollow\">Online Demo</a></li>\n<li><strong>toAround</strong>, make children elements space around, see <a href=\"https://fower.vercel.app/docs/to-around\" rel=\"nofollow\">Online Demo</a></li>\n</ul>\n<p>不管你的容器是水平方向 (row) 还是垂直方向 (column)，toRight 、toBottom 这些空间关系表达，都会符合你视觉习惯。</p>\n<p>这种抽象的表达方式为什么更好呢？我觉的有几点好处：</p>\n<ul>\n<li>更符合人的直觉，你只需记住按照方向处理空间关系，比如：toRight 、toBotom 等，没有什么比这更符合人的直觉，另外的好处的是你的记忆负担会变得非常小</li>\n<li>更少地代码，这种方式会让你代码更少，可维护性更强，开发效率更高</li>\n</ul>\n<p>我理想中的代码编写方式(伪代码)：</p>\n<p>1.下面代码会自动把容器内的元素水平和垂直居中，容器默认是 row, 所以可以省去：</p>\n<pre><code class=\"language-html\">&lt;Container toCenter&gt;\n  &lt;ItemA /&gt;\n&lt;/Container&gt;\n</code></pre>\n<p>效果如下：\n<img alt=\"\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://fower.vercel.app/img/layout-1.png\"/></p>\n<p>2.下面代码会把 A,B,C 三个个元素在容器内靠右对齐, 容器默认是 row, 所以可以省去：</p>\n<pre><code class=\"language-jsx\">&lt;Container toRight&gt;\n  &lt;ItemA /&gt;\n  &lt;ItemB /&gt;\n  &lt;ItemC /&gt;\n&lt;/Container&gt;\n</code></pre>\n<p>效果如下：\n<img alt=\"\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://fower.vercel.app/img/layout-2.png\"/></p>\n<p>3.下面代码会把 A,B 两个元素在容器内靠右对齐, 我们声明了 column, 所以元素是竖着排列的：</p>\n<pre><code class=\"language-jsx\">&lt;Container column toRight&gt;\n  &lt;ItemA /&gt;\n  &lt;ItemB /&gt;\n&lt;/Container&gt;\n</code></pre>\n<p>效果如下：\n<img alt=\"\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://fower.vercel.app/img/layout-3.png\"/></p>\n<ol>\n<li>使用组合：</li>\n</ol>\n<pre><code class=\"language-jsx\">&lt;Container toBetween toCenterY&gt;\n  &lt;ItemA /&gt;\n  &lt;ItemB /&gt;\n  &lt;ItemC /&gt;\n&lt;/Container&gt;\n</code></pre>\n<p>效果如下：\n<img alt=\"\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://fower.vercel.app/img/layout-4.png\"/></p>\n<p>这里只举这四个伪代码例子，实际上你可以使用 \"toLeft\", \"toRight\" 等这些指令实现大部分 UI 布局。</p>\n<p>上面，我们抽象了空间关系的表达方式，并把指令作用于容器上。下面我们来看一个布局效果，你会怎么实现它：</p>\n<p><img alt=\"\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://fower.vercel.app/img/layout-5.png\"/></p>\n<p>下面说说我理想中的方案，伪代码如下：</p>\n<pre><code class=\"language-jsx\">&lt;Container toBetween toCenterY&gt;\n  &lt;ItemA /&gt;\n  &lt;ItemB selfBottom /&gt;\n  &lt;ItemC /&gt;\n&lt;/Container&gt;\n</code></pre>\n<p>这里我们抽象出另外一类指令：selfTop, selfRight, selfBottom, selfLeft, selfStretch. 这些指令可以作用在元素上，单独控制元素的定位对齐方式。</p>\n<p>所以我们有一些作用于元素的指令：</p>\n<ul>\n<li><strong>selfTop</strong>, make elements seft align to top</li>\n<li><strong>selfRight</strong>, make elements seft align to right</li>\n<li><strong>selfBottom</strong>, make elements seft align to bottom</li>\n<li><strong>selfLeft</strong>, make elements seft align to left</li>\n<li><strong>selfStretch</strong>, make elements seft to Stretch</li>\n</ul>\n<p>最后，总结一下我们布局工具设计方案：</p>\n<ul>\n<li>[容器] 方向控制指令，使用 row, column, 如果未声明，默认为 row</li>\n<li>[容器] 内元素对齐方式指令: toCenter, toCenterX, toCenterY, toTop, toRight, toBottom, toLeft, toBetween, toAround, toEvenly，使用这些指令控制子元素对齐方式，并且和 row, column 方向无关</li>\n<li>[元素] 自身对齐方式指令：selfTop, selfRight, selfBottom, selfLeft, selfStretch. 这些指令单独控制元素自身对齐方式</li>\n<li>使用任何 [容器] 指令，会自动触发 flexbox 布局，无需手动设置 <code>display: flex;</code></li>\n</ul>\n<p>上面 4 条规则设计，就是我个人理想中的布局方式。</p>\n<h2>Fower Layout</h2>\n<p>回到我们的标题：一个开发者优先(developer-first)的布局引擎。 实际上，Fower Layout 不能称之为布局引擎，那是什么？ 也许我们称其为 Layout tookkit 会更合适。</p>\n<p>Fower Layout 的最大特点是 developer-first，它易于使用并且符合人们的直觉。</p>\n<p>实际上，即使你不使用 Fower Layout, 你也可以使用上面提到的设计思想去实现一套好用的布局工具，而不是使用原始的 Flex Layout 。</p>\n<p>关于 Fower Layout 更详细的信息，可以看看官方文档的介绍：<a href=\"https://fower.vercel.app/docs/fower-layout-introduction\" rel=\"nofollow\">Fower Layout Introduction</a>。</p>\n","last_modified":1620445041,"replies":24,"id":775608},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1620107083","name":"programmer","avatar_normal":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1620107083","title":"程序员","url":"https://www.v2ex.com/go/programmer","topics":44388,"footer":"","header":"While code monkeys are not eating bananas, they're coding.","title_alternative":"Programmer","avatar_mini":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1620107083","stars":7364,"aliases":[],"root":false,"id":300,"parent_node_name":"computer"},"member":{"username":"polyang","website":"","github":null,"psn":null,"avatar_normal":"https://cdn.v2ex.com/avatar/8bcb/c1d0/510643_mini.png?m=1601433658","bio":"","url":"https://www.v2ex.com/u/polyang","tagline":"","twitter":null,"created":1601393887,"avatar_large":"https://cdn.v2ex.com/avatar/8bcb/c1d0/510643_mini.png?m=1601433658","avatar_mini":"https://cdn.v2ex.com/avatar/8bcb/c1d0/510643_mini.png?m=1601433658","location":"","btc":null,"id":510643},"last_reply_by":"lithiumii","last_touched":1620444291,"title":"想要了解群晖 nas，我该从哪些方面着手？","url":"https://www.v2ex.com/t/775560","created":1620436007,"content":"暂时没有买的打算，只是想先了解，为将来购买做准备。\r\n\r\n预计我会拿 nas 来做以下功能：\r\n1 、文件服务器：目前有个良心云的服务器，部署了博客，碍于图片不知道放哪里好，有个 nas 之后就可以放这里了。\r\n2 、私人片库：随时看高清电影，再也不用担心想看的电影、电视剧被下架了。\r\n3 、在 docker 上部署服务：有了它之后，开发需要用到的 MySQL 、redis 这些都可以部署到上面了。\r\n4 、照片备份：有些照片是好几年前拍的，有了它之后，我可以把这些照片放在这上面了。","content_rendered":"暂时没有买的打算，只是想先了解，为将来购买做准备。<br /><br />预计我会拿 nas 来做以下功能：<br />1 、文件服务器：目前有个良心云的服务器，部署了博客，碍于图片不知道放哪里好，有个 nas 之后就可以放这里了。<br />2 、私人片库：随时看高清电影，再也不用担心想看的电影、电视剧被下架了。<br />3 、在 docker 上部署服务：有了它之后，开发需要用到的 MySQL 、redis 这些都可以部署到上面了。<br />4 、照片备份：有些照片是好几年前拍的，有了它之后，我可以把这些照片放在这上面了。","last_modified":1620436007,"replies":24,"id":775560},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1618811339","name":"qna","avatar_normal":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1618811339","title":"问与答","url":"https://www.v2ex.com/go/qna","topics":172183,"footer":"","header":"一个更好的世界需要你持续地提出好问题。","title_alternative":"Questions and Answers","avatar_mini":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1618811339","stars":3224,"aliases":[],"root":false,"id":12,"parent_node_name":"v2ex"},"member":{"username":"3dwelcome","website":"","github":"","psn":"","avatar_normal":"https://cdn.v2ex.com/avatar/d2d0/2f32/162136_mini.png?m=1617116799","bio":"","url":"https://www.v2ex.com/u/3dwelcome","tagline":"","twitter":"","created":1457260101,"avatar_large":"https://cdn.v2ex.com/avatar/d2d0/2f32/162136_mini.png?m=1617116799","avatar_mini":"https://cdn.v2ex.com/avatar/d2d0/2f32/162136_mini.png?m=1617116799","location":"","btc":"","id":162136},"last_reply_by":"3dwelcome","last_touched":1620472247,"title":"有哪些别人不告诉你，自己领悟出来的人生建议？","url":"https://www.v2ex.com/t/775696","created":1620464978,"content":"最近花自己的钱包，给公司电脑小升级有感。买了 SSD 硬盘和机械键盘后，开发心情立马不一样了。\r\n\r\n以前运行大型软件，或者虚拟机都超级卡，对一些大型新软件有抵触情绪。技术难免落后，其实对码农来说，好电脑等于好工具，就是提升生产力。\r\n\r\n很奇怪的是，以前几个同事觉得，公司电脑能开机就行，完全不想出钱，我也被同化了。直到最近才醒悟过来，等着公司换新电脑，真不知道猴年马月去了。可技术发展却是日新月异的。","content_rendered":"<p>最近花自己的钱包，给公司电脑小升级有感。买了 SSD 硬盘和机械键盘后，开发心情立马不一样了。</p>\n<p>以前运行大型软件，或者虚拟机都超级卡，对一些大型新软件有抵触情绪。技术难免落后，其实对码农来说，好电脑等于好工具，就是提升生产力。</p>\n<p>很奇怪的是，以前几个同事觉得，公司电脑能开机就行，完全不想出钱，我也被同化了。直到最近才醒悟过来，等着公司换新电脑，真不知道猴年马月去了。可技术发展却是日新月异的。</p>\n","last_modified":1620464978,"replies":21,"id":775696},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/6cdd/60ea/184_large.png?m=1615111825","name":"apple","avatar_normal":"https://cdn.v2ex.com/navatar/6cdd/60ea/184_normal.png?m=1615111825","title":"Apple","url":"https://www.v2ex.com/go/apple","topics":14781,"footer":"","header":"设计了 <a href=\"/go/watch\">Apple Watch</a>，<a href=\"/go/ipad\">iPad</a>，<a href=\"/go/iphone\">iPhone</a>，<a href=\"/go/imac\">iMac</a> 及 <a href=\"/go/mbp\">MacBook Pro</a> 等电子产品的美国公司。","title_alternative":"Apple","avatar_mini":"https://cdn.v2ex.com/navatar/6cdd/60ea/184_mini.png?m=1615111825","stars":1800,"aliases":[],"root":false,"id":184,"parent_node_name":"hardware"},"member":{"username":"leeum","website":null,"github":null,"psn":null,"avatar_normal":"https://cdn.v2ex.com/avatar/a8fb/ffd8/80196_mini.png?m=1597224463","bio":null,"url":"https://www.v2ex.com/u/leeum","tagline":null,"twitter":null,"created":1415160911,"avatar_large":"https://cdn.v2ex.com/avatar/a8fb/ffd8/80196_mini.png?m=1597224463","avatar_mini":"https://cdn.v2ex.com/avatar/a8fb/ffd8/80196_mini.png?m=1597224463","location":null,"btc":null,"id":80196},"last_reply_by":"1002xin","last_touched":1620450070,"title":"根据 Jon Prosser 爆料渲染出来的 Macbook Air 效果图","url":"https://www.v2ex.com/t/775574","created":1620438652,"content":"[![g8wNFS.jpg]( https://z3.ax1x.com/2021/05/08/g8wNFS.jpg)]( https://imgtu.com/i/g8wNFS)\r\n[![g8w4yR.jpg]( https://z3.ax1x.com/2021/05/08/g8w4yR.jpg)]( https://imgtu.com/i/g8w4yR)\r\n[![g8whl9.jpg]( https://z3.ax1x.com/2021/05/08/g8whl9.jpg)]( https://imgtu.com/i/g8whl9)","content_rendered":"<p><a href=\"https://imgtu.com/i/g8wNFS\" rel=\"nofollow\"><img alt=\"g8wNFS.jpg\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://z3.ax1x.com/2021/05/08/g8wNFS.jpg\"/></a>\n<a href=\"https://imgtu.com/i/g8w4yR\" rel=\"nofollow\"><img alt=\"g8w4yR.jpg\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://z3.ax1x.com/2021/05/08/g8w4yR.jpg\"/></a>\n<a href=\"https://imgtu.com/i/g8whl9\" rel=\"nofollow\"><img alt=\"g8whl9.jpg\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://z3.ax1x.com/2021/05/08/g8whl9.jpg\"/></a></p>\n","last_modified":1620438652,"replies":21,"id":775574},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/d67d/8ab4/39_large.png?m=1620107141","name":"android","avatar_normal":"https://cdn.v2ex.com/navatar/d67d/8ab4/39_normal.png?m=1620107141","title":"Android","url":"https://www.v2ex.com/go/android","topics":8697,"footer":"","header":"来自 <a href=\"/go/google\">Google</a> 的开放源代码智能手机平台。","title_alternative":"Android","avatar_mini":"https://cdn.v2ex.com/navatar/d67d/8ab4/39_mini.png?m=1620107141","stars":4779,"aliases":[],"root":false,"id":39,"parent_node_name":"hardware"},"member":{"username":"dagger2","website":null,"github":null,"psn":null,"avatar_normal":"https://cdn.v2ex.com/gravatar/678b2e5bbe24a823b985d2dda7178efd?s=24&d=retro","bio":null,"url":"https://www.v2ex.com/u/dagger2","tagline":null,"twitter":null,"created":1515553628,"avatar_large":"https://cdn.v2ex.com/gravatar/678b2e5bbe24a823b985d2dda7178efd?s=24&d=retro","avatar_mini":"https://cdn.v2ex.com/gravatar/678b2e5bbe24a823b985d2dda7178efd?s=24&d=retro","location":null,"btc":null,"id":281318},"last_reply_by":"nbweb","last_touched":1620442924,"title":"跳过安卓相机拍照，从系统选择照片","url":"https://www.v2ex.com/t/775553","created":1620434976,"content":"我司一款 app 有要求用户现场拍照的需求，但是最近发现有些用户反复上传相同照片，明显不是拍的，应该是从相册选择的，最后联系用户得知，是安装了一款 app，我装上这个之后，确实在跳转相机的时候，系统会弹出选择框，可以跳到相册去选择，大家有遇到过这种 app 吗，应该怎么禁止这种操作","content_rendered":"<p>我司一款 app 有要求用户现场拍照的需求，但是最近发现有些用户反复上传相同照片，明显不是拍的，应该是从相册选择的，最后联系用户得知，是安装了一款 app，我装上这个之后，确实在跳转相机的时候，系统会弹出选择框，可以跳到相册去选择，大家有遇到过这种 app 吗，应该怎么禁止这种操作</p>\n","last_modified":1620434976,"replies":20,"id":775553},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/fc22/1309/181_large.png?m=1608240651","name":"travel","avatar_normal":"https://cdn.v2ex.com/navatar/fc22/1309/181_normal.png?m=1608240651","title":"旅行","url":"https://www.v2ex.com/go/travel","topics":626,"footer":"","header":"你会把上大学的学费用来环游世界么？","title_alternative":"Travel","avatar_mini":"https://cdn.v2ex.com/navatar/fc22/1309/181_mini.png?m=1608240651","stars":721,"aliases":[],"root":false,"id":181,"parent_node_name":"life"},"member":{"username":"cheny95","website":"","github":"","psn":"","avatar_normal":"https://cdn.v2ex.com/avatar/bbc5/02f2/20964_mini.png?m=1457051626","bio":"","url":"https://www.v2ex.com/u/cheny95","tagline":"","twitter":"","created":1337264823,"avatar_large":"https://cdn.v2ex.com/avatar/bbc5/02f2/20964_mini.png?m=1457051626","avatar_mini":"https://cdn.v2ex.com/avatar/bbc5/02f2/20964_mini.png?m=1457051626","location":"","btc":"","id":20964},"last_reply_by":"cheny95","last_touched":1620475785,"title":"五一自驾出游江浙皖路线完美结束，特来与大家分享。","url":"https://www.v2ex.com/t/775679","created":1620462331,"content":"前进提要： 请移步 /t/772638\r\n\r\n实际共行驶 1500+KM，燃油费大约是 800~900 元，过路费 0 元。\r\n\r\n之前在帖子里说一下规划路线，实际旅途中基本没有偏差。\r\n\r\n重点是此路线一路畅通，没有堵过车！ 真是意外之喜。\r\n\r\n一路上就是根据规划，到每一个地方，或者方向不变去临近城市逛逛，走到哪玩到哪吃到哪。有些地方也不是说一定要去景区或者是游玩，只要踩在那座城市的道路上就好。\r\n\r\n下面的图片都拼接了，方便观看。\r\n\r\n路线以及车内起居。\r\n\r\nhttps://wx3.sinaimg.cn/mw690/005yrGU3ly1gqb1xcyk2lj30u01hcb29.jpg\r\n\r\n\r\n全程 4 天。\r\n\r\nDay 1：\r\n\r\n路线：\r\n4 月 30 日晚上从合肥出发，准备卡着 12 点下高速，后来忘记了省界收费站，在马鞍山大桥下的太白岛服务区等 12 点。（当时听说已取消，但是具体我也不知道。不过好像我的 ETC 记录是直接到浙江省，然后显示 0 元。）\r\n过了 12 点后继续行驶大约 2 个小时左右抵达南浔服务区。晚上在该服务区休息整顿（车窗留缝切有纱窗）。\r\n南浔服务区很不错，不用进服务区里面就有接水的地方，比较友好。方便洗漱。早上 7 点多醒来继续出发，此时距离乌镇景区车程只有 30 分钟，非常近。驾车一会儿就抵达目的地了。\r\n\r\n游玩:\r\n提前购买了东栅+西栅套票，好像是 190 元。玩了整个一个东栅和西栅。东栅有原住民，开发的稍微少一些，西栅开发的比较多，很商业化。\r\n很多大佬说西栅好玩，但是实际上，我个人偏向于东栅。因为民风、习俗、古朴吧，更适合溜达。\r\n西栅就是人人人人…各种民宿、饭店、纪念品店。真是的无力吐槽，几乎可以说是没有什么景点。\r\n东栅还有条专门卖东西的小街，有的人还有淘宝店铺的，我给娃买了一把布伞，东栅染坊卖 45，我在他店里买是 25，一个小帽子 10 元。到西栅一把伞 65 起。我在东栅出口买了把油纸伞，25 元。西栅 98 、118……\r\n说是西栅主要看夜景，灯光。其实我看了也就那样。大概溜了一圈，和其他游客挤了一会就撤了。\r\n\r\n中午随便美团挑了一家去吃，晚上在佬泰丰斋。鳝丝真不错。\r\n\r\n正好旁边互联网啥中心有个复古音乐活动，去逛了逛。\r\n\r\n对了，乌镇景区桥多，想带娃去的需要提前注意，推车走不了。\r\n\r\nhttps://wx3.sinaimg.cn/large/005yrGU3ly1gqb1s73umej30u01hc45c.jpg\r\n\r\n\r\nDay 2：\r\n\r\n晚上往苏州方向去，在白洋湖服务区休息。和前日基本一样。\r\n\r\n游玩：苏州我个人认为没什么好玩的地方，就向之前有大佬说过，苏州的景点适合坐下来喝茶聊天，我可能不太适合。感觉不太好玩。\r\n定了狮子林的票，如果说乌镇西栅是人人人人，狮子林就是从从从从… 退票了。然后平江路逛到头，一路基本是商铺，更喜欢巷子里的老宅子。\r\n吃饭准备去老苏州茶酒楼，但是去的稍晚，没有位置了，很遗憾。不过吃了 102.8 小饭馆，口味也很不错。\r\n\r\n下午去了虎丘，“来苏州不看虎丘，乃憾事也。” -- 苏轼。 我觉得苏轼骗了好多人，虎丘没啥好玩的。但是查了下，说是很久以前站在虎丘看到狮子山，现在啥也看不到。\r\n\r\n晚上在路过苏茂山服务区，第一次看到特色服务区，确实涨姿势了~\r\n\r\n然后计划里有镇江西津渡古街区和扬州瘦西湖。\r\n\r\n虎丘之后直接驾车去了镇江西津渡，晚上人不多，算一个有意思的街区，灯光和景色比较好。\r\n\r\n然后逛到了十一二点，因为规划中有扬州，就去了扬州，虽然大晚上什么也看不到，但是就是一个执念，路过了瘦西湖（网评不好），到了大明寺门口。然后一时兴起说去高邮看看，然后直接开车过去，晚上宿于高邮服务区。\r\n\r\nhttps://wx2.sinaimg.cn/large/005yrGU3ly1gqb1scp2j5j30u01hcai9.jpg\r\n\r\nhttps://wx2.sinaimg.cn/large/005yrGU3ly1gqb1ryy93pj30u01hc46q.jpg\r\n\r\nhttps://wx3.sinaimg.cn/large/005yrGU3ly1gqb1sp9wptj30u01hcajt.jpg\r\n\r\n\r\nDay 3：\r\n\r\n早上从高邮服务区出发，然后去听说高邮东大街比较复古，去了之后发现不是想象中的那样，就是未开发的 90 年代的小街。随便走走就去找地方吃饭，搜到了汪味馆，但是人太多，有人在办酒席，就去了某商业中心吃了顿饭，买了点高邮鸭蛋，直接去了盱眙（计划外）。\r\n\r\n由于天气预报说要下雨，直接订了酒店（还好定的早，华住铂金会员大床房 254 元，晚上到的人价格已经涨到了 574 ），到盱眙吃了当地排名第一的 於氏龙虾（虾神龙虾），确实口味不错.价格略高，折合 14 元左右一只。228/288/388 元对应 15/20/27 只。\r\n晚上入住酒店，好好休息了一番，半夜还叫了龙虾外卖，毕竟来盱眙了嘛，哈哈。\r\n第二天睡到自然醒，中午又去了於氏龙虾吃一顿，还打包了一份龙虾。吃完下午一两点钟往省内老家方向赶。去接娃。后续就是家中的事了，不赘诉了。\r\n\r\nhttps://wx2.sinaimg.cn/large/005yrGU3ly1gqb1sty1j7j30u01hcn35.jpg\r\n\r\n计划中的淮安没有去，因为去淮安完全是为了走一个大圈，不想原路返回，然后淮安的周恩来纪念馆也不是很想去就取消了。实际上整个计划偏差不算大，有取消的，也有新增的，而且新增的也有着惊喜。\r\n\r\n\r\n整体来说，此次旅途很佛系，走哪玩哪吃哪，高速一路畅通。算上后面回老家的旅途，可谓是：\r\n\r\n五天三省七城三千里，高速一路畅通无阻。\r\n游过乌镇水乡，爬过姑苏虎丘，\r\n路过镇江西津渡，看过扬州瘦西湖，\r\n买过高邮双黄蛋，吃过盱眙小龙虾，\r\n有过服务区睡车里，也有过酒店叫外卖。\r\n旅途很精彩，有机会再来！\r\n\r\n\r\n以后有时间的话，还会去其他的地方。\r\n\r\n附线路图，使用足迹 App 。\r\n标记是按日期记录的，不是停留点记录的，所以 2 号点是在太白岛等过 12 点以及看不到乌镇等……\r\n\r\nhttps://wx3.sinaimg.cn/large/005yrGU3ly1gqb0jk2fiqj30n01dsdpz.jpg","content_rendered":"前进提要： 请移步 <a target=\"_blank\" href=\"/t/772638\" rel=\"nofollow noopener\">/t/772638</a><br /><br />实际共行驶 1500+KM，燃油费大约是 800~900 元，过路费 0 元。<br /><br />之前在帖子里说一下规划路线，实际旅途中基本没有偏差。<br /><br />重点是此路线一路畅通，没有堵过车！ 真是意外之喜。<br /><br />一路上就是根据规划，到每一个地方，或者方向不变去临近城市逛逛，走到哪玩到哪吃到哪。有些地方也不是说一定要去景区或者是游玩，只要踩在那座城市的道路上就好。<br /><br />下面的图片都拼接了，方便观看。<br /><br />路线以及车内起居。<br /><br /><img src=\"https://wx3.sinaimg.cn/mw690/005yrGU3ly1gqb1xcyk2lj30u01hcb29.jpg\" class=\"embedded_image\" rel=\"noreferrer\" referrerpolicy=\"no-referrer\"> <br /><br /><br />全程 4 天。<br /><br />Day 1：<br /><br />路线：<br />4 月 30 日晚上从合肥出发，准备卡着 12 点下高速，后来忘记了省界收费站，在马鞍山大桥下的太白岛服务区等 12 点。（当时听说已取消，但是具体我也不知道。不过好像我的 ETC 记录是直接到浙江省，然后显示 0 元。）<br />过了 12 点后继续行驶大约 2 个小时左右抵达南浔服务区。晚上在该服务区休息整顿（车窗留缝切有纱窗）。<br />南浔服务区很不错，不用进服务区里面就有接水的地方，比较友好。方便洗漱。早上 7 点多醒来继续出发，此时距离乌镇景区车程只有 30 分钟，非常近。驾车一会儿就抵达目的地了。<br /><br />游玩:<br />提前购买了东栅+西栅套票，好像是 190 元。玩了整个一个东栅和西栅。东栅有原住民，开发的稍微少一些，西栅开发的比较多，很商业化。<br />很多大佬说西栅好玩，但是实际上，我个人偏向于东栅。因为民风、习俗、古朴吧，更适合溜达。<br />西栅就是人人人人…各种民宿、饭店、纪念品店。真是的无力吐槽，几乎可以说是没有什么景点。<br />东栅还有条专门卖东西的小街，有的人还有淘宝店铺的，我给娃买了一把布伞，东栅染坊卖 45，我在他店里买是 25，一个小帽子 10 元。到西栅一把伞 65 起。我在东栅出口买了把油纸伞，25 元。西栅 98 、118……<br />说是西栅主要看夜景，灯光。其实我看了也就那样。大概溜了一圈，和其他游客挤了一会就撤了。<br /><br />中午随便美团挑了一家去吃，晚上在佬泰丰斋。鳝丝真不错。<br /><br />正好旁边互联网啥中心有个复古音乐活动，去逛了逛。<br /><br />对了，乌镇景区桥多，想带娃去的需要提前注意，推车走不了。<br /><br /><img src=\"https://wx3.sinaimg.cn/large/005yrGU3ly1gqb1s73umej30u01hc45c.jpg\" class=\"embedded_image\" rel=\"noreferrer\" referrerpolicy=\"no-referrer\"> <br /><br /><br />Day 2：<br /><br />晚上往苏州方向去，在白洋湖服务区休息。和前日基本一样。<br /><br />游玩：苏州我个人认为没什么好玩的地方，就向之前有大佬说过，苏州的景点适合坐下来喝茶聊天，我可能不太适合。感觉不太好玩。<br />定了狮子林的票，如果说乌镇西栅是人人人人，狮子林就是从从从从… 退票了。然后平江路逛到头，一路基本是商铺，更喜欢巷子里的老宅子。<br />吃饭准备去老苏州茶酒楼，但是去的稍晚，没有位置了，很遗憾。不过吃了 102.8 小饭馆，口味也很不错。<br /><br />下午去了虎丘，“来苏州不看虎丘，乃憾事也。” -- 苏轼。 我觉得苏轼骗了好多人，虎丘没啥好玩的。但是查了下，说是很久以前站在虎丘看到狮子山，现在啥也看不到。<br /><br />晚上在路过苏茂山服务区，第一次看到特色服务区，确实涨姿势了~<br /><br />然后计划里有镇江西津渡古街区和扬州瘦西湖。<br /><br />虎丘之后直接驾车去了镇江西津渡，晚上人不多，算一个有意思的街区，灯光和景色比较好。<br /><br />然后逛到了十一二点，因为规划中有扬州，就去了扬州，虽然大晚上什么也看不到，但是就是一个执念，路过了瘦西湖（网评不好），到了大明寺门口。然后一时兴起说去高邮看看，然后直接开车过去，晚上宿于高邮服务区。<br /><br /><img src=\"https://wx2.sinaimg.cn/large/005yrGU3ly1gqb1scp2j5j30u01hcai9.jpg\" class=\"embedded_image\" rel=\"noreferrer\" referrerpolicy=\"no-referrer\"> <br /><br /><img src=\"https://wx2.sinaimg.cn/large/005yrGU3ly1gqb1ryy93pj30u01hc46q.jpg\" class=\"embedded_image\" rel=\"noreferrer\" referrerpolicy=\"no-referrer\"> <br /><br /><img src=\"https://wx3.sinaimg.cn/large/005yrGU3ly1gqb1sp9wptj30u01hcajt.jpg\" class=\"embedded_image\" rel=\"noreferrer\" referrerpolicy=\"no-referrer\"> <br /><br /><br />Day 3：<br /><br />早上从高邮服务区出发，然后去听说高邮东大街比较复古，去了之后发现不是想象中的那样，就是未开发的 90 年代的小街。随便走走就去找地方吃饭，搜到了汪味馆，但是人太多，有人在办酒席，就去了某商业中心吃了顿饭，买了点高邮鸭蛋，直接去了盱眙（计划外）。<br /><br />由于天气预报说要下雨，直接订了酒店（还好定的早，华住铂金会员大床房 254 元，晚上到的人价格已经涨到了 574 ），到盱眙吃了当地排名第一的 於氏龙虾（虾神龙虾），确实口味不错.价格略高，折合 14 元左右一只。228/288/388 元对应 15/20/27 只。<br />晚上入住酒店，好好休息了一番，半夜还叫了龙虾外卖，毕竟来盱眙了嘛，哈哈。<br />第二天睡到自然醒，中午又去了於氏龙虾吃一顿，还打包了一份龙虾。吃完下午一两点钟往省内老家方向赶。去接娃。后续就是家中的事了，不赘诉了。<br /><br /><img src=\"https://wx2.sinaimg.cn/large/005yrGU3ly1gqb1sty1j7j30u01hcn35.jpg\" class=\"embedded_image\" rel=\"noreferrer\" referrerpolicy=\"no-referrer\"> <br /><br />计划中的淮安没有去，因为去淮安完全是为了走一个大圈，不想原路返回，然后淮安的周恩来纪念馆也不是很想去就取消了。实际上整个计划偏差不算大，有取消的，也有新增的，而且新增的也有着惊喜。<br /><br /><br />整体来说，此次旅途很佛系，走哪玩哪吃哪，高速一路畅通。算上后面回老家的旅途，可谓是：<br /><br />五天三省七城三千里，高速一路畅通无阻。<br />游过乌镇水乡，爬过姑苏虎丘，<br />路过镇江西津渡，看过扬州瘦西湖，<br />买过高邮双黄蛋，吃过盱眙小龙虾，<br />有过服务区睡车里，也有过酒店叫外卖。<br />旅途很精彩，有机会再来！<br /><br /><br />以后有时间的话，还会去其他的地方。<br /><br />附线路图，使用足迹 App 。<br />标记是按日期记录的，不是停留点记录的，所以 2 号点是在太白岛等过 12 点以及看不到乌镇等……<br /><br /><img src=\"https://wx3.sinaimg.cn/large/005yrGU3ly1gqb0jk2fiqj30n01dsdpz.jpg\" class=\"embedded_image\" rel=\"noreferrer\" referrerpolicy=\"no-referrer\"> ","last_modified":1620462331,"replies":18,"id":775679},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/c74d/97b0/16_large.png?m=1618915546","name":"share","avatar_normal":"https://cdn.v2ex.com/navatar/c74d/97b0/16_normal.png?m=1618915546","title":"分享发现","url":"https://www.v2ex.com/go/share","topics":33948,"footer":"","header":"分享你看到的好玩的，有信息量的，欢迎从这里获取灵感。","title_alternative":"Share","avatar_mini":"https://cdn.v2ex.com/navatar/c74d/97b0/16_mini.png?m=1618915546","stars":4485,"aliases":[],"root":false,"id":16,"parent_node_name":"v2ex"},"member":{"username":"dullwit","website":"","github":"","psn":"","avatar_normal":"https://cdn.v2ex.com/avatar/d2d9/615c/51809_mini.png?m=1452154217","bio":"","url":"https://www.v2ex.com/u/dullwit","tagline":"","twitter":"","created":1386939187,"avatar_large":"https://cdn.v2ex.com/avatar/d2d9/615c/51809_mini.png?m=1452154217","avatar_mini":"https://cdn.v2ex.com/avatar/d2d9/615c/51809_mini.png?m=1452154217","location":"","btc":"","id":51809},"last_reply_by":"ynyounuo","last_touched":1620455130,"title":"infuse7 发布了，同时支持 mac","url":"https://www.v2ex.com/t/775595","created":1620442776,"content":"https://firecore.com/blog/25042\r\n\r\n 测试 Mac 版的 infuse pro 订阅 IOS 端和 Mac 端都可以通用","content_rendered":"<a target=\"_blank\" href=\"https://firecore.com/blog/25042\" rel=\"nofollow noopener\">https://firecore.com/blog/25042</a><br /><br /> 测试 Mac 版的 infuse pro 订阅 IOS 端和 Mac 端都可以通用","last_modified":1620442776,"replies":17,"id":775595},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1620107083","name":"programmer","avatar_normal":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1620107083","title":"程序员","url":"https://www.v2ex.com/go/programmer","topics":44388,"footer":"","header":"While code monkeys are not eating bananas, they're coding.","title_alternative":"Programmer","avatar_mini":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1620107083","stars":7364,"aliases":[],"root":false,"id":300,"parent_node_name":"computer"},"member":{"username":"SimbaPeng","website":"","github":null,"psn":null,"avatar_normal":"https://cdn.v2ex.com/gravatar/644f3f438e1280eb32e78f1aa72929f6?s=24&d=retro","bio":"","url":"https://www.v2ex.com/u/SimbaPeng","tagline":"","twitter":null,"created":1496654553,"avatar_large":"https://cdn.v2ex.com/gravatar/644f3f438e1280eb32e78f1aa72929f6?s=24&d=retro","avatar_mini":"https://cdn.v2ex.com/gravatar/644f3f438e1280eb32e78f1aa72929f6?s=24&d=retro","location":"","btc":null,"id":234035},"last_reply_by":"yiqiao","last_touched":1620444773,"title":"V2 现在不 FQ 不能访问了吗？","url":"https://www.v2ex.com/t/775594","created":1620442369,"content":"手机网络是上海联通，公司是上海电信。全都是不 FQ 无法访问 V2","content_rendered":"<p>手机网络是上海联通，公司是上海电信。全都是不 FQ 无法访问 V2</p>\n","last_modified":1620442369,"replies":17,"id":775594},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1618811339","name":"qna","avatar_normal":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1618811339","title":"问与答","url":"https://www.v2ex.com/go/qna","topics":172185,"footer":"","header":"一个更好的世界需要你持续地提出好问题。","title_alternative":"Questions and Answers","avatar_mini":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1618811339","stars":3225,"aliases":[],"root":false,"id":12,"parent_node_name":"v2ex"},"member":{"username":"buxianyu","website":"http://twitter.com/buxianyu","github":"","psn":"","avatar_normal":"https://cdn.v2ex.com/avatar/1170/4817/6611_mini.png?m=1334815525","bio":"","url":"https://www.v2ex.com/u/buxianyu","tagline":"","twitter":"buxianyu","created":1300099820,"avatar_large":"https://cdn.v2ex.com/avatar/1170/4817/6611_mini.png?m=1334815525","avatar_mini":"https://cdn.v2ex.com/avatar/1170/4817/6611_mini.png?m=1334815525","location":"","btc":"","id":6611},"last_reply_by":"luhe","last_touched":1620479783,"title":"Markdown 比起纯文本好像也没多大用处啊","url":"https://www.v2ex.com/t/775706","created":1620466465,"content":"Markdown 为啥这么流行？\r\n还不如直接纯文本。\r\n或者就 html 。","content_rendered":"<p>Markdown 为啥这么流行？\n还不如直接纯文本。\n或者就 html 。</p>\n","last_modified":1620466465,"replies":16,"id":775706},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/093f/65e0/59_large.png?m=1615956453","name":"random","avatar_normal":"https://cdn.v2ex.com/navatar/093f/65e0/59_normal.png?m=1615956453","title":"随想","url":"https://www.v2ex.com/go/random","topics":2882,"footer":"","header":"有的时候，可以停下来找找灵感，然后再继续。","title_alternative":"Random","avatar_mini":"https://cdn.v2ex.com/navatar/093f/65e0/59_mini.png?m=1615956453","stars":916,"aliases":[],"root":false,"id":59,"parent_node_name":"v2ex"},"member":{"username":"GCP","website":"","github":null,"psn":null,"avatar_normal":"https://cdn.v2ex.com/gravatar/5683f4ced5d5b2607fbd863e30b6cf17?s=24&d=retro","bio":"","url":"https://www.v2ex.com/u/GCP","tagline":"","twitter":null,"created":1614618074,"avatar_large":"https://cdn.v2ex.com/gravatar/5683f4ced5d5b2607fbd863e30b6cf17?s=24&d=retro","avatar_mini":"https://cdn.v2ex.com/gravatar/5683f4ced5d5b2607fbd863e30b6cf17?s=24&d=retro","location":"","btc":null,"id":535448},"last_reply_by":"Windn0","last_touched":1620460863,"title":"只要上网，哪怕使用原生输入法，个人隐私问题也无法避免","url":"https://www.v2ex.com/t/775624","created":1620451249,"content":"介于之前问过原生输入法难用大家如何适应，最后忍痛割爱切换至原生使用近 17 天，结果就是“然并卵”\r\n\r\n软件需要运营所以会存在广告，但他们不仅读取用户的偏好且还联盟。举个最最常见的例子：刷微博后再打开抖音，第一个或者前面几个总会出现微博里的那个内容\r\n\r\n如今在同一个网络或用 SIM 卡设备，似乎已不存在什么隐私，每个人都被他们画的惟妙惟肖","content_rendered":"<p>介于之前问过原生输入法难用大家如何适应，最后忍痛割爱切换至原生使用近 17 天，结果就是“然并卵”</p>\n<p>软件需要运营所以会存在广告，但他们不仅读取用户的偏好且还联盟。举个最最常见的例子：刷微博后再打开抖音，第一个或者前面几个总会出现微博里的那个内容</p>\n<p>如今在同一个网络或用 SIM 卡设备，似乎已不存在什么隐私，每个人都被他们画的惟妙惟肖</p>\n","last_modified":1620451249,"replies":16,"id":775624},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/70ef/df2e/17_large.png?m=1618915561","name":"create","avatar_normal":"https://cdn.v2ex.com/navatar/70ef/df2e/17_normal.png?m=1618915561","title":"分享创造","url":"https://www.v2ex.com/go/create","topics":16188,"footer":"","header":"欢迎你在这里发布自己的最新作品！","title_alternative":"Create","avatar_mini":"https://cdn.v2ex.com/navatar/70ef/df2e/17_mini.png?m=1618915561","stars":3924,"aliases":[],"root":false,"id":17,"parent_node_name":"geek"},"member":{"username":"zhew1991","website":null,"github":null,"psn":null,"avatar_normal":"https://cdn.v2ex.com/gravatar/28a1c9e20e0431a20188c133d63ea0e7?s=24&d=retro","bio":null,"url":"https://www.v2ex.com/u/zhew1991","tagline":null,"twitter":null,"created":1539009356,"avatar_large":"https://cdn.v2ex.com/gravatar/28a1c9e20e0431a20188c133d63ea0e7?s=24&d=retro","avatar_mini":"https://cdn.v2ex.com/gravatar/28a1c9e20e0431a20188c133d63ea0e7?s=24&d=retro","location":null,"btc":null,"id":354590},"last_reply_by":"zhew1991","last_touched":1620453384,"title":"自己开发了一个手机屏幕共享的 APP，可以远程协助解决父母手机问题","url":"https://www.v2ex.com/t/775606","created":1620444361,"content":"如果你曾经帮父母远程解决过手机问题，就应该明白这个过程多么痛苦。只能微信视频，让妈的手机对着爸的手机，然后语音告诉他们怎么点击，经常就是半天都说不清。市面上的软件只支持同一手机品牌之间的协助（比如华为畅联），或者操作起来太复杂了，父母学不会。\r\n\r\n为了解决这个问题，我们开发了一款能做到同屏对方手机、实时连麦的 APP，同时你还可以在同屏过来的内容上实时涂鸦，比如你可以这样在手机上把淘宝这个 APP 圈起来：\r\nhttps://niuniu-apps.oss-cn-beijing.aliyuncs.com/slideshow/4_phone.png\r\n\r\n父母的手机上会在同样位置出现你的圈，这样他们照着点就可以了（仅在父母手机为安卓的情况下支持，因为 iOS 系统不支持悬浮窗；但是协助方也就是你的手机不管是 iOS 还是安卓都可以）。再也不会半天都说不清楚怎么操作了。\r\n\r\n使用 APP 的操作也很简单：在 APP 内点个按钮，就能通过微信分享你的协助请求给父母。父母直接从微信点击链接，就能跳转到我们的 APP，在他同意开始同屏之后，就开始屏幕分享了。对父母而言，是十分简单的操作。\r\n\r\n有了这个神器，不管是父母需要你卸载流氓软件、清理手机内存，还是设置各大视频网站的会员，都很容易。可以大大降低你解决父母手机问题的痛苦。当然了，你在工作中需要同屏的时候也可以使用这个 APP 。异地恋的朋友们也可以用这个来和另一半同屏刷刷抖音、看看相册，岂不美滋滋。\r\n\r\n只要在各大应用商店搜索“大福手机同屏”即可下载。有什么问题或者反馈也欢迎随时留言或者联系。谢谢啦！","content_rendered":"如果你曾经帮父母远程解决过手机问题，就应该明白这个过程多么痛苦。只能微信视频，让妈的手机对着爸的手机，然后语音告诉他们怎么点击，经常就是半天都说不清。市面上的软件只支持同一手机品牌之间的协助（比如华为畅联），或者操作起来太复杂了，父母学不会。<br /><br />为了解决这个问题，我们开发了一款能做到同屏对方手机、实时连麦的 APP，同时你还可以在同屏过来的内容上实时涂鸦，比如你可以这样在手机上把淘宝这个 APP 圈起来：<br /><a target=\"_blank\" href=\"https://niuniu-apps.oss-cn-beijing.aliyuncs.com/slideshow/4_phone.png\" rel=\"nofollow noopener\">https://niuniu-apps.oss-cn-beijing.aliyuncs.com/slideshow/4_phone.png</a><br /><br />父母的手机上会在同样位置出现你的圈，这样他们照着点就可以了（仅在父母手机为安卓的情况下支持，因为 iOS 系统不支持悬浮窗；但是协助方也就是你的手机不管是 iOS 还是安卓都可以）。再也不会半天都说不清楚怎么操作了。<br /><br />使用 APP 的操作也很简单：在 APP 内点个按钮，就能通过微信分享你的协助请求给父母。父母直接从微信点击链接，就能跳转到我们的 APP，在他同意开始同屏之后，就开始屏幕分享了。对父母而言，是十分简单的操作。<br /><br />有了这个神器，不管是父母需要你卸载流氓软件、清理手机内存，还是设置各大视频网站的会员，都很容易。可以大大降低你解决父母手机问题的痛苦。当然了，你在工作中需要同屏的时候也可以使用这个 APP 。异地恋的朋友们也可以用这个来和另一半同屏刷刷抖音、看看相册，岂不美滋滋。<br /><br />只要在各大应用商店搜索“大福手机同屏”即可下载。有什么问题或者反馈也欢迎随时留言或者联系。谢谢啦！","last_modified":1620444361,"replies":16,"id":775606}]