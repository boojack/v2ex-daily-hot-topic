[{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1615112532","name":"qna","avatar_normal":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1615112532","title":"问与答","url":"https://www.v2ex.com/go/qna","topics":171468,"footer":"","header":"一个更好的世界需要你持续地提出好问题。","title_alternative":"Questions and Answers","avatar_mini":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1615112532","stars":3206,"aliases":[],"root":false,"id":12,"parent_node_name":"v2ex"},"member":{"username":"vitovan","website":"VitoVan.com","github":"VitoVan","psn":"","avatar_normal":"https://cdn.v2ex.com/avatar/9366/088b/28986_mini.png?m=1613954226","bio":"豆瓣：猫猫驴\r\nhttps://www.douban.com/people/maomaolvloveyou/\r\n\r\nNFT?\r\nhttps://opensea.io/collection/mml\r\n\r\n你喜欢的▇▇，\r\n是在水深火热中，等春暖花开？\r\n还是改头换面后，叫张三李四？\r\n又或是化为林中的鹿，海里的鲸，\r\n梦到深处时，会想念到的那个人？\r\n\r\nAnyway, the first rule of fight club is?","url":"https://www.v2ex.com/u/vitovan","tagline":"猫猫驴 - 基本有害","twitter":"","created":1351401337,"avatar_large":"https://cdn.v2ex.com/avatar/9366/088b/28986_mini.png?m=1613954226","avatar_mini":"https://cdn.v2ex.com/avatar/9366/088b/28986_mini.png?m=1613954226","location":"银河系西旋臂末端","btc":"","id":28986},"last_reply_by":"fueen","last_touched":1618535433,"title":"论述题：为什么安卓手机越用越卡？","url":"https://www.v2ex.com/t/770984","created":1618532264,"content":"请从「是什么」、「为什么」和「怎么办」三个方面作答。","content_rendered":"请从「是什么」、「为什么」和「怎么办」三个方面作答。","last_modified":1618532264,"replies":24,"id":770984},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1618114597","name":"programmer","avatar_normal":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1618114597","title":"程序员","url":"https://www.v2ex.com/go/programmer","topics":44216,"footer":"","header":"While code monkeys are not eating bananas, they're coding.","title_alternative":"Programmer","avatar_mini":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1618114597","stars":7341,"aliases":[],"root":false,"id":300,"parent_node_name":"computer"},"member":{"username":"x500","website":null,"github":null,"psn":null,"avatar_normal":"https://cdn.v2ex.com/gravatar/3b1f13caa681a404c041cd8f4323b001?s=24&d=retro","bio":null,"url":"https://www.v2ex.com/u/x500","tagline":null,"twitter":null,"created":1612872547,"avatar_large":"https://cdn.v2ex.com/gravatar/3b1f13caa681a404c041cd8f4323b001?s=24&d=retro","avatar_mini":"https://cdn.v2ex.com/gravatar/3b1f13caa681a404c041cd8f4323b001?s=24&d=retro","location":null,"btc":null,"id":532813},"last_reply_by":"whileFalse","last_touched":1618534566,"title":"发现 Win10/7 一个资深 bug， 0day bug?","url":"https://www.v2ex.com/t/770983","created":1618532048,"content":"我有几个外置磁盘，有个目录，100 多 G，几万个文件，不论在 win10/win7 下删除都只是显示出删除框一阵子后，然后就自动消失了，根本不能删除一个文件。\r\n分析：里面是递归调用，形成要操作列表缓存区，结果缓存区溢出，它就一脸蒙比的爬着走了。","content_rendered":"<p>我有几个外置磁盘，有个目录，100 多 G，几万个文件，不论在 win10/win7 下删除都只是显示出删除框一阵子后，然后就自动消失了，根本不能删除一个文件。\n分析：里面是递归调用，形成要操作列表缓存区，结果缓存区溢出，它就一脸蒙比的爬着走了。</p>\n","last_modified":1618532096,"replies":11,"id":770983},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/069d/3bb0/580_large.png?m=1611468295","name":"ios","avatar_normal":"https://cdn.v2ex.com/navatar/069d/3bb0/580_normal.png?m=1611468295","title":"iOS","url":"https://www.v2ex.com/go/ios","topics":2623,"footer":"","header":"运行于 Apple 移动设备上的操作系统。","title_alternative":"iOS","avatar_mini":"https://cdn.v2ex.com/navatar/069d/3bb0/580_mini.png?m=1611468295","stars":624,"aliases":[],"root":false,"id":580,"parent_node_name":"apple"},"member":{"username":"xingshu1990","website":"https://xingshu1990.github.io/","github":"","psn":"","avatar_normal":"https://cdn.v2ex.com/gravatar/19ccd9ce9863014e4ba22fb4d4432dcc?s=24&d=retro","bio":"","url":"https://www.v2ex.com/u/xingshu1990","tagline":"","twitter":"","created":1486702368,"avatar_large":"https://cdn.v2ex.com/gravatar/19ccd9ce9863014e4ba22fb4d4432dcc?s=24&d=retro","avatar_mini":"https://cdn.v2ex.com/gravatar/19ccd9ce9863014e4ba22fb4d4432dcc?s=24&d=retro","location":"","btc":"","id":214422},"last_reply_by":"emeab","last_touched":1618535805,"title":"因为国内部分开发人员的小心思，所以我更偏向较为封闭的 iPhone 手机。","url":"https://www.v2ex.com/t/770993","created":1618535041,"content":"因为\r\n这些读取剪切板的国产 app 是真的烦： https://fast.v2ex.com/t/770796\r\n这个帖子，我特地去搜索 IOS 自动化 清空剪切板，于是发现下面的内容\r\n\r\nhttps://www.jianshu.com/p/10a6900cc904?from=timeline\r\n\r\n以下是以上网址中的文字，涉及到的代码 不做验证，只想说有人动歪脑筋。\r\n\r\n之前用淘宝给微信好友分享链接的时候，发现在微信中复制了宝贝的链接，然后再从后台切换到淘宝客户端，淘宝就会弹出一个页面，询问是否要跳转到相关页面，今天试着实现了一下，分享出来~\r\n\r\n    //识别剪贴板中的内容\r\n    if let paste = UIPasteboard.generalPasteboard().string where\r\n        (paste.hasPrefix(\"http://\") || paste.hasPrefix(\"https://\")) { \r\n        //如果剪贴板中的内容是链接\r\n        let alert = UIAlertController(title: \"要打开剪贴板中的链接吗？\",\r\n            message: nil,\r\n            preferredStyle: UIAlertControllerStyle.Alert)\r\n        alert.addAction(UIAlertAction(title: \"打开\",\r\n            style: UIAlertActionStyle.Default,\r\n            handler: { Void in\r\n                // your implementation\r\n                print(paste)\r\n        }))\r\n        alert.addAction(UIAlertAction(title: \"忽略\",\r\n            style: UIAlertActionStyle.Cancel,\r\n            handler: nil))\r\n        //弹出 Alert\r\n        let storyboard = UIStoryboard(name: \"Main\", bundle: nil)\r\n        if let vc = storyboard.instantiateViewControllerWithIdentifier(\"navi\") as? UINavigationController {\r\n            self.window?.rootViewController = vc\r\n            vc.presentViewController(alert, animated: true, completion: nil)\r\n        }\r\n    }\r\n获取设备的剪贴板很简单，第一行代码就搞定了，if 语句中判断了一下剪贴板中的内容是不是链接，注意 http 和 https 都要写上，这点很容易被忽略（在浏览器地址栏中复制以 www.开头的文本会自动在剪贴板中转为 http 或 https 开头的链接）。\r\n\r\n更值得注意的是，因为你需要让 App 在每次从后台进入前台的时候都检测一下剪贴板中有没有链接，所以以上方法要放在 AppDelegate 文件的 applicationWillEnterForeground 方法中。\r\n\r\nAppDelegate.swift\r\n而这个方法中是不能通过 self 来调用 ViewController 的，所以要曲线救国的话，你需要手动获取 Storyboard 、ViewController，再设置 window 的 rootViewController 才能去掉所有报错和警告。\r\n\r\n（这里我只是把剪贴板中的链接输出到控制台了，想要自己用 UIWebView 打开链接的话，在 // your implementation 这句注释这里写自己的方法吧）\r\n\r\n\r\n [ 150928 更新] \r\n\r\n对比 applicationWillEnterForeground\r\n和 applicationDidBecomeActive\r\n这两个方法，前者是指 App 从后台进入前台，后者是指 App 处于活跃状态，所以前者相对于后者，缺少的部分是，当 App 刚刚启动，而不是从后台取出的时候，它无法识别剪贴板。\r\n因为你不能要求每次都让用户先把 App 打开，再往剪贴板里面填东西，再跳转回来，所以个人建议把上面的代码放在 applicationDidBecomeActive 方法中，而不是 applicationWillEnterForeground 。\r\n\r\n\r\n————————————\r\n关于更大的监控，不用在这里讨论，大家放心里就好。","content_rendered":"<p>因为\n这些读取剪切板的国产 app 是真的烦： <a href=\"https://fast.v2ex.com/t/770796\" rel=\"nofollow\">https://fast.v2ex.com/t/770796</a>\n这个帖子，我特地去搜索 IOS 自动化 清空剪切板，于是发现下面的内容</p>\n<p><a href=\"https://www.jianshu.com/p/10a6900cc904?from=timeline\" rel=\"nofollow\">https://www.jianshu.com/p/10a6900cc904?from=timeline</a></p>\n<p>以下是以上网址中的文字，涉及到的代码 不做验证，只想说有人动歪脑筋。</p>\n<p>之前用淘宝给微信好友分享链接的时候，发现在微信中复制了宝贝的链接，然后再从后台切换到淘宝客户端，淘宝就会弹出一个页面，询问是否要跳转到相关页面，今天试着实现了一下，分享出来~</p>\n<pre><code>//识别剪贴板中的内容\nif let paste = UIPasteboard.generalPasteboard().string where\n    (paste.hasPrefix(\"http://\") || paste.hasPrefix(\"https://\")) { \n    //如果剪贴板中的内容是链接\n    let alert = UIAlertController(title: \"要打开剪贴板中的链接吗？\",\n        message: nil,\n        preferredStyle: UIAlertControllerStyle.Alert)\n    alert.addAction(UIAlertAction(title: \"打开\",\n        style: UIAlertActionStyle.Default,\n        handler: { Void in\n            // your implementation\n            print(paste)\n    }))\n    alert.addAction(UIAlertAction(title: \"忽略\",\n        style: UIAlertActionStyle.Cancel,\n        handler: nil))\n    //弹出 Alert\n    let storyboard = UIStoryboard(name: \"Main\", bundle: nil)\n    if let vc = storyboard.instantiateViewControllerWithIdentifier(\"navi\") as? UINavigationController {\n        self.window?.rootViewController = vc\n        vc.presentViewController(alert, animated: true, completion: nil)\n    }\n}\n</code></pre>\n<p>获取设备的剪贴板很简单，第一行代码就搞定了，if 语句中判断了一下剪贴板中的内容是不是链接，注意 http 和 https 都要写上，这点很容易被忽略（在浏览器地址栏中复制以 www.开头的文本会自动在剪贴板中转为 http 或 https 开头的链接）。</p>\n<p>更值得注意的是，因为你需要让 App 在每次从后台进入前台的时候都检测一下剪贴板中有没有链接，所以以上方法要放在 AppDelegate 文件的 applicationWillEnterForeground 方法中。</p>\n<p>AppDelegate.swift\n而这个方法中是不能通过 self 来调用 ViewController 的，所以要曲线救国的话，你需要手动获取 Storyboard 、ViewController，再设置 window 的 rootViewController 才能去掉所有报错和警告。</p>\n<p>（这里我只是把剪贴板中的链接输出到控制台了，想要自己用 UIWebView 打开链接的话，在 // your implementation 这句注释这里写自己的方法吧）</p>\n<p>[ 150928 更新] </p>\n<p>对比 applicationWillEnterForeground\n和 applicationDidBecomeActive\n这两个方法，前者是指 App 从后台进入前台，后者是指 App 处于活跃状态，所以前者相对于后者，缺少的部分是，当 App 刚刚启动，而不是从后台取出的时候，它无法识别剪贴板。\n因为你不能要求每次都让用户先把 App 打开，再往剪贴板里面填东西，再跳转回来，所以个人建议把上面的代码放在 applicationDidBecomeActive 方法中，而不是 applicationWillEnterForeground 。</p>\n<p>————————————\n关于更大的监控，不用在这里讨论，大家放心里就好。</p>\n","last_modified":1618535041,"replies":6,"id":770993}]