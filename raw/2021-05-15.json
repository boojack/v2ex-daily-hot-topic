[{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/a87f/f679/4_large.png?m=1588961966","name":"music","avatar_normal":"https://cdn.v2ex.com/navatar/a87f/f679/4_normal.png?m=1588961966","title":"音乐","url":"https://www.v2ex.com/go/music","topics":1369,"footer":"","header":"Music is an art form whose medium is sound and silence.","title_alternative":"Music","avatar_mini":"https://cdn.v2ex.com/navatar/a87f/f679/4_mini.png?m=1588961966","stars":1278,"aliases":[],"root":false,"id":4,"parent_node_name":"life"},"member":{"username":"Raven316","website":"","github":"","psn":"","avatar_normal":"https://cdn.v2ex.com/avatar/91ef/2282/402641_mini.png?m=1555495240","bio":"","url":"https://www.v2ex.com/u/Raven316","tagline":"","twitter":"","created":1555494864,"avatar_large":"https://cdn.v2ex.com/avatar/91ef/2282/402641_mini.png?m=1555495240","avatar_mini":"https://cdn.v2ex.com/avatar/91ef/2282/402641_mini.png?m=1555495240","location":"","btc":"","id":402641},"last_reply_by":"aliveyang","last_touched":1621066086,"title":"周杰伦真的有艺术上的追求吗？","url":"https://www.v2ex.com/t/777091","created":1621059372,"content":"小时候对周杰伦迷的不行，周杰伦也确实才华横溢。但是我上大学大三（ 08 年）之后基本不再听他的歌了，之后周杰伦结婚之后，发的歌越来越少，质量也越来越低。而我听的音乐越来越多，发现周杰伦的成就也就那样了，至少我真的没有发现他在认真尝试风格上的突破，而且偶尔听听他的音乐的话也觉得腻歪，实在听不下去。现在迷上了听中岛美雪和 bob dylan 的歌，音乐高雅耐听，歌词写的用心，也有自己的想法和世界观。而周杰伦。。说好的“我要做音乐上的皇帝”呢？？？难道告白气球就是他现在的水平了吗？\r\n\r\n说实话有点遗憾的感觉","content_rendered":"小时候对周杰伦迷的不行，周杰伦也确实才华横溢。但是我上大学大三（ 08 年）之后基本不再听他的歌了，之后周杰伦结婚之后，发的歌越来越少，质量也越来越低。而我听的音乐越来越多，发现周杰伦的成就也就那样了，至少我真的没有发现他在认真尝试风格上的突破，而且偶尔听听他的音乐的话也觉得腻歪，实在听不下去。现在迷上了听中岛美雪和 bob dylan 的歌，音乐高雅耐听，歌词写的用心，也有自己的想法和世界观。而周杰伦。。说好的“我要做音乐上的皇帝”呢？？？难道告白气球就是他现在的水平了吗？<br /><br />说实话有点遗憾的感觉","last_modified":1621059635,"replies":47,"id":777091},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1618811339","name":"qna","avatar_normal":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1618811339","title":"问与答","url":"https://www.v2ex.com/go/qna","topics":172406,"footer":"","header":"一个更好的世界需要你持续地提出好问题。","title_alternative":"Questions and Answers","avatar_mini":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1618811339","stars":3226,"aliases":[],"root":false,"id":12,"parent_node_name":"v2ex"},"member":{"username":"johncang","website":null,"github":null,"psn":null,"avatar_normal":"https://cdn.v2ex.com/avatar/af9f/5d75/62293_mini.png?m=1617462003","bio":null,"url":"https://www.v2ex.com/u/johncang","tagline":null,"twitter":null,"created":1399651084,"avatar_large":"https://cdn.v2ex.com/avatar/af9f/5d75/62293_mini.png?m=1617462003","avatar_mini":"https://cdn.v2ex.com/avatar/af9f/5d75/62293_mini.png?m=1617462003","location":null,"btc":null,"id":62293},"last_reply_by":"MartinWu","last_touched":1621065754,"title":"想做全职 up 主。不想露脸，有没有什么好办法？","url":"https://www.v2ex.com/t/777083","created":1621055928,"content":"有没有什么好办法借鉴，","content_rendered":"有没有什么好办法借鉴，","last_modified":1621055928,"replies":36,"id":777083},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/a3c6/5c29/108_large.png?m=1620107025","name":"bb","avatar_normal":"https://cdn.v2ex.com/navatar/a3c6/5c29/108_normal.png?m=1620107025","title":"宽带症候群","url":"https://www.v2ex.com/go/bb","topics":9387,"footer":"","header":"网速很重要。比快更快。","title_alternative":"Broadband Symptom Complex","avatar_mini":"https://cdn.v2ex.com/navatar/a3c6/5c29/108_mini.png?m=1620107025","stars":4979,"aliases":[],"root":false,"id":108,"parent_node_name":"geek"},"member":{"username":"qingmuhy0","website":"","github":"","psn":"","avatar_normal":"https://cdn.v2ex.com/gravatar/6ad499dc4817393953cd84e0602f7b0f?s=24&d=retro","bio":"","url":"https://www.v2ex.com/u/qingmuhy0","tagline":"","twitter":"","created":1543304274,"avatar_large":"https://cdn.v2ex.com/gravatar/6ad499dc4817393953cd84e0602f7b0f?s=24&d=retro","avatar_mini":"https://cdn.v2ex.com/gravatar/6ad499dc4817393953cd84e0602f7b0f?s=24&d=retro","location":"","btc":"","id":366144},"last_reply_by":"ochatokori","last_touched":1621053262,"title":"电信公网搭建 openvpn 回内网遇到的疑难杂症","url":"https://www.v2ex.com/t/777037","created":1621037627,"content":"家里是江苏电信，有公网 IP，搭建好 OPENVPN 后可以通过移动宽带网连接直接回局域网，但电信的蜂窝流量却死活连不上，只要一有经过 openvpn 的流量就会断开连接，然后一直重复断开连接断开连接这个过程，有老哥遇到过类似的问题不，求分享。\r\n\r\n由于比较懒，我是用的 QNAP 的 QVPN 搭建的 openvpn，并没有部署在软路由上，但配置了正确的端口映射，应该也不是这方面的问题，否则就无法解释为什么移动网可以连接了。\r\n\r\n感觉这个问题也许应该贴到 VPN 节点，一方面 VPN 板块不知道为什么我一直点不进去，另一方面，我感觉是运营商在作祟，所以就贴在了我相对比较熟悉的宽带症候群节点","content_rendered":"家里是江苏电信，有公网 IP，搭建好 OPENVPN 后可以通过移动宽带网连接直接回局域网，但电信的蜂窝流量却死活连不上，只要一有经过 openvpn 的流量就会断开连接，然后一直重复断开连接断开连接这个过程，有老哥遇到过类似的问题不，求分享。<br /><br />由于比较懒，我是用的 QNAP 的 QVPN 搭建的 openvpn，并没有部署在软路由上，但配置了正确的端口映射，应该也不是这方面的问题，否则就无法解释为什么移动网可以连接了。<br /><br />感觉这个问题也许应该贴到 VPN 节点，一方面 VPN 板块不知道为什么我一直点不进去，另一方面，我感觉是运营商在作祟，所以就贴在了我相对比较熟悉的宽带症候群节点","last_modified":1621037913,"replies":17,"id":777037},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/4ea0/6fbc/770_large.png?m=1620106885","name":"career","avatar_normal":"https://cdn.v2ex.com/navatar/4ea0/6fbc/770_normal.png?m=1620106885","title":"职场话题","url":"https://www.v2ex.com/go/career","topics":11447,"footer":"","header":"这里，我们聊聊那些工作中遇到的开心和不开心的事。","title_alternative":"Career","avatar_mini":"https://cdn.v2ex.com/navatar/4ea0/6fbc/770_mini.png?m=1620106885","stars":2037,"aliases":[],"root":false,"id":770,"parent_node_name":"work"},"member":{"username":"bzi","website":"","github":null,"psn":null,"avatar_normal":"https://cdn.v2ex.com/gravatar/f16fc56ae91523c142f9ab552b2e9103?s=24&d=retro","bio":"","url":"https://www.v2ex.com/u/bzi","tagline":"","twitter":null,"created":1550741507,"avatar_large":"https://cdn.v2ex.com/gravatar/f16fc56ae91523c142f9ab552b2e9103?s=24&d=retro","avatar_mini":"https://cdn.v2ex.com/gravatar/f16fc56ae91523c142f9ab552b2e9103?s=24&d=retro","location":"","btc":null,"id":385896},"last_reply_by":"fiypig","last_touched":1621064028,"title":"和这样的同事对接真的难顶","url":"https://www.v2ex.com/t/777072","created":1621052153,"content":"稍有不顺就咄咄逼人地指责我，自己菜写不出代码或者接口参数不会用就先喷一通我的接口再说，万一真是我的接口有 bug 更不得了，直接用上司训斥下属的语气说“你看看你给我返回了什么东西！”之类的话，逼得我大动肝火直球怼他。现在跑路还太早，后面真不知道怎么过了。","content_rendered":"稍有不顺就咄咄逼人地指责我，自己菜写不出代码或者接口参数不会用就先喷一通我的接口再说，万一真是我的接口有 bug 更不得了，直接用上司训斥下属的语气说“你看看你给我返回了什么东西！”之类的话，逼得我大动肝火直球怼他。现在跑路还太早，后面真不知道怎么过了。","last_modified":1621052153,"replies":13,"id":777072},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1618811339","name":"qna","avatar_normal":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1618811339","title":"问与答","url":"https://www.v2ex.com/go/qna","topics":172406,"footer":"","header":"一个更好的世界需要你持续地提出好问题。","title_alternative":"Questions and Answers","avatar_mini":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1618811339","stars":3226,"aliases":[],"root":false,"id":12,"parent_node_name":"v2ex"},"member":{"username":"redeyesovo","website":null,"github":null,"psn":null,"avatar_normal":"https://cdn.v2ex.com/avatar/3b48/69df/448394_mini.png?m=1607761658","bio":null,"url":"https://www.v2ex.com/u/redeyesovo","tagline":null,"twitter":null,"created":1571729362,"avatar_large":"https://cdn.v2ex.com/avatar/3b48/69df/448394_mini.png?m=1607761658","avatar_mini":"https://cdn.v2ex.com/avatar/3b48/69df/448394_mini.png?m=1607761658","location":null,"btc":null,"id":448394},"last_reply_by":"redeyesovo","last_touched":1621060835,"title":"想看大鸟","url":"https://www.v2ex.com/t/777058","created":1621048205,"content":"今早看了一篇星球研究所的《 1400 多种中国鸟，你认识多少？》，想问问大伙有没有相关的鸟类纪录片推荐","content_rendered":"<p>今早看了一篇星球研究所的《 1400 多种中国鸟，你认识多少？》，想问问大伙有没有相关的鸟类纪录片推荐</p>\n","last_modified":1621048205,"replies":13,"id":777058},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1618811339","name":"qna","avatar_normal":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1618811339","title":"问与答","url":"https://www.v2ex.com/go/qna","topics":172401,"footer":"","header":"一个更好的世界需要你持续地提出好问题。","title_alternative":"Questions and Answers","avatar_mini":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1618811339","stars":3226,"aliases":[],"root":false,"id":12,"parent_node_name":"v2ex"},"member":{"username":"zxCoder","website":"","github":null,"psn":null,"avatar_normal":"https://cdn.v2ex.com/avatar/eb4e/991a/457207_mini.png?m=1577369208","bio":"","url":"https://www.v2ex.com/u/zxCoder","tagline":"","twitter":null,"created":1575385668,"avatar_large":"https://cdn.v2ex.com/avatar/eb4e/991a/457207_mini.png?m=1577369208","avatar_mini":"https://cdn.v2ex.com/avatar/eb4e/991a/457207_mini.png?m=1577369208","location":"","btc":null,"id":457207},"last_reply_by":"timelessg","last_touched":1621056042,"title":"有没有适合零基础入门的，讲得比较通俗易懂的经济，金融科普类教程","url":"https://www.v2ex.com/t/777038","created":1621039424,"content":"看完能在别人吹水的时候接上几句的那种。。。\r\n\r\n现在对各种专业名词完全不懂，啥股票基金也不知道，唯一的认知就是**买完涨了我就赚钱**\r\n\r\n还有像现在什么币，什么币不也挺火的，我也一直没搞懂","content_rendered":"<p>看完能在别人吹水的时候接上几句的那种。。。</p>\n<p>现在对各种专业名词完全不懂，啥股票基金也不知道，唯一的认知就是<strong>买完涨了我就赚钱</strong></p>\n<p>还有像现在什么币，什么币不也挺火的，我也一直没搞懂</p>\n","last_modified":1621039424,"replies":12,"id":777038},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/e7b2/4b11/360_large.png?m=1583044904","name":"windows","avatar_normal":"https://cdn.v2ex.com/navatar/e7b2/4b11/360_normal.png?m=1583044904","title":"Windows","url":"https://www.v2ex.com/go/windows","topics":2017,"footer":"","header":"Windows, not walls.","title_alternative":"Windows","avatar_mini":"https://cdn.v2ex.com/navatar/e7b2/4b11/360_mini.png?m=1583044904","stars":656,"aliases":[],"root":false,"id":360,"parent_node_name":"os"},"member":{"username":"S4msara","website":"","github":"","psn":"","avatar_normal":"https://cdn.v2ex.com/avatar/fb6b/a22d/358071_mini.png?m=1572316047","bio":"","url":"https://www.v2ex.com/u/S4msara","tagline":"","twitter":"","created":1540301335,"avatar_large":"https://cdn.v2ex.com/avatar/fb6b/a22d/358071_mini.png?m=1572316047","avatar_mini":"https://cdn.v2ex.com/avatar/fb6b/a22d/358071_mini.png?m=1572316047","location":"","btc":"","id":358071},"last_reply_by":"flynaj","last_touched":1621058368,"title":"Win 10 硬盘读写几乎没有，但活动时间 100%","url":"https://www.v2ex.com/t/777044","created":1621042357,"content":"破旧老电脑，就最近半个月才有的现象（更新 20H2 几天后）。每次开机之后就会保持这个状态很长一段时间（一个小时只多不少）。排查过索引服务、磁盘碎片清理计划等可能的问题，但都没有解决。\r\n![image.png]( https://i.loli.net/2021/05/15/EFmwpSjXfhOtxJB.png)","content_rendered":"<p>破旧老电脑，就最近半个月才有的现象（更新 20H2 几天后）。每次开机之后就会保持这个状态很长一段时间（一个小时只多不少）。排查过索引服务、磁盘碎片清理计划等可能的问题，但都没有解决。\n<img alt=\"image.png\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://i.loli.net/2021/05/15/EFmwpSjXfhOtxJB.png\"/></p>\n","last_modified":1621042357,"replies":11,"id":777044},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1618811339","name":"qna","avatar_normal":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1618811339","title":"问与答","url":"https://www.v2ex.com/go/qna","topics":172401,"footer":"","header":"一个更好的世界需要你持续地提出好问题。","title_alternative":"Questions and Answers","avatar_mini":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1618811339","stars":3226,"aliases":[],"root":false,"id":12,"parent_node_name":"v2ex"},"member":{"username":"miaomiao2014","website":"","github":"","psn":"","avatar_normal":"https://cdn.v2ex.com/avatar/d244/a2b2/99382_mini.png?m=1613354639","bio":"","url":"https://www.v2ex.com/u/miaomiao2014","tagline":"","twitter":"","created":1424606126,"avatar_large":"https://cdn.v2ex.com/avatar/d244/a2b2/99382_mini.png?m=1613354639","avatar_mini":"https://cdn.v2ex.com/avatar/d244/a2b2/99382_mini.png?m=1613354639","location":"","btc":"","id":99382},"last_reply_by":"slwl123","last_touched":1620345928,"title":"如何选择食用油？","url":"https://www.v2ex.com/t/777036","created":1621037128,"content":"刚才⬆️某京看看，品牌太多，什么豆，菜籽油等，不知道选择哪个？要注意什么？欢迎🈶️经验的朋友讨论下，分享下.","content_rendered":"<p>刚才⬆️某京看看，品牌太多，什么豆，菜籽油等，不知道选择哪个？要注意什么？欢迎🈶️经验的朋友讨论下，分享下.</p>\n","last_modified":1621037128,"replies":11,"id":777036},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/a3c6/5c29/108_large.png?m=1620107025","name":"bb","avatar_normal":"https://cdn.v2ex.com/navatar/a3c6/5c29/108_normal.png?m=1620107025","title":"宽带症候群","url":"https://www.v2ex.com/go/bb","topics":9388,"footer":"","header":"网速很重要。比快更快。","title_alternative":"Broadband Symptom Complex","avatar_mini":"https://cdn.v2ex.com/navatar/a3c6/5c29/108_mini.png?m=1620107025","stars":4979,"aliases":[],"root":false,"id":108,"parent_node_name":"geek"},"member":{"username":"guanyin8cnq12","website":null,"github":null,"psn":null,"avatar_normal":"https://cdn.v2ex.com/gravatar/e1b1307d91f0e3206fcd25c9c9a33ef7?s=24&d=retro","bio":null,"url":"https://www.v2ex.com/u/guanyin8cnq12","tagline":null,"twitter":null,"created":1604848323,"avatar_large":"https://cdn.v2ex.com/gravatar/e1b1307d91f0e3206fcd25c9c9a33ef7?s=24&d=retro","avatar_mini":"https://cdn.v2ex.com/gravatar/e1b1307d91f0e3206fcd25c9c9a33ef7?s=24&d=retro","location":null,"btc":null,"id":516537},"last_reply_by":"wwqm2","last_touched":1621065927,"title":"用手机 在 chrome 里 搜索, 无论搜索什么都有一个广告,叫必利劲,请问是我手机被黑了,还是 google 真穷到天天打这样的广告?","url":"https://www.v2ex.com/t/777092","created":1621059806,"content":"手机,iphone 10.3 系统\r\n\r\nhttps://imgur.com/a/mzN5zFw","content_rendered":"手机,iphone 10.3 系统<br /><br /><a target=\"_blank\" href=\"https://imgur.com/a/mzN5zFw\" rel=\"nofollow noopener\">https://imgur.com/a/mzN5zFw</a>","last_modified":1621060074,"replies":9,"id":777092},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/b6d7/67d2/22_large.png?m=1607656854","name":"macos","avatar_normal":"https://cdn.v2ex.com/navatar/b6d7/67d2/22_normal.png?m=1607656854","title":"macOS","url":"https://www.v2ex.com/go/macos","topics":16586,"footer":"<a href=\"/mbp\">MacBook Pro</a> 及 <a href=\"/go/imac\">iMac</a> 等 <a href=\"/go/apple\">Apple</a> 公司设计的计算机所运行的操作系统。<a href=\"/go/idev\">iOS</a> 的基础。","header":"The world’s most advanced desktop operating system.","title_alternative":"macOS","avatar_mini":"https://cdn.v2ex.com/navatar/b6d7/67d2/22_mini.png?m=1607656854","stars":4301,"aliases":[],"root":false,"id":22,"parent_node_name":"os"},"member":{"username":"fydpfg","website":"","github":null,"psn":null,"avatar_normal":"https://cdn.v2ex.com/avatar/24dc/105f/121690_mini.png?m=1621056319","bio":"","url":"https://www.v2ex.com/u/fydpfg","tagline":"","twitter":null,"created":1433984546,"avatar_large":"https://cdn.v2ex.com/avatar/24dc/105f/121690_mini.png?m=1621056319","avatar_mini":"https://cdn.v2ex.com/avatar/24dc/105f/121690_mini.png?m=1621056319","location":"","btc":null,"id":121690},"last_reply_by":"xupefei","last_touched":1621064785,"title":"最新稳定版 macOS 系统缺陷导致 USB 外置硬盘远远达不到正常速度？内核 bug？","url":"https://www.v2ex.com/t/777094","created":1621060317,"content":"今天往移动硬盘里复制一些文件，发现速度奇慢（~ 10 MB/s，有的时候甚至 4 MB/s 都不到）。\r\n\r\n这个盘是我用来 Time Machine 备份的盘，所以我第一反应就是 Time Machine 在运行，况且这种 2.5 寸的 SMR 盘本来也快不到哪里去。于是我果断**把 Time Machine 关了**，并且确认了这块盘没有进程在读写，然后继续复制，发现还是非常慢，甚至磁盘工具（ Disk Utility.app ）打开的时候都会卡很久。\r\n\r\n我猜想最可能是电脑开机太久出了什么 bug，或者磁盘碎片太多了，或者移动硬盘坏了。还有可能是 USB 转 Type-C 的转接头出了什么问题或者电脑硬件坏了。\r\n\r\n我进行了一些测试，感觉整个事情变得越来越蹊跷：\r\n\r\n- 重启电脑，没有变化\r\n- 测试**读**文件的速度，发现**读**跟**写**一样慢，下面的实验都是在测读取速度（因为盘上有数据，想测写入必须要挂载）\r\n- 为了避免是文件系统的问题，把文件系统卸载，然后用 dd 命令直接读裸盘，速度稳定在 16 MB/s\r\n- 换用不同的转接头（带供电和不带供电）和不同的雷电口，没有区别\r\n- 把移动硬盘用相同的转接头插在另一台 Linux 机器上，dd 命令读裸盘，速度稳定在 70 多 MB/s，这说明硬盘没问题\r\n- 拿出我的 Type-C 外置 SSD，在 macOS 上用 dd 测试读裸盘速度，**45 MB/s**，把这块 SSD 插 Linux 机器上面，**540 MB/s**\r\n- 拿出一个 U 盘，在 macOS 上 dd 读 15 MB/s，在 Linux 机器上 42 MB/s\r\n- 通过 Type-C 扩展坞可以正常使用外接显示器、千兆网（可以满速）\r\n- 在扩展坞上面同时插两个盘（上面说的移动硬盘和 U 盘），两个盘可以同时稳定在上面说的速度\r\n\r\n另外补充一句，我的这几个盘之前在 macbook 上都**跑到过正常的速度**，不是一直这么慢。但是我最近没有进行对读写速度比较敏感的工作，也就有很长一段时间没关注过外置磁盘的速度了，不知道这个问题是什么时候开始有的。\r\n\r\n这就有趣了，不管什么盘，只要是 USB 外接，就远远跑不到正常速度，并且速度的峰值还不相同。到这里几乎只剩下了两种可能，一种是我电脑硬件坏了，另一种是 macOS 系统有问题。我又花了一些时间做了如下测试：\r\n\r\n- 进 recovery，把安全启动相关选项关掉，把 macbook 通过 U 盘启动进 Ubuntu Live，然后对上述几块盘进行测试，读取速度都可以跑满，跟 Linux 机器的测速结果一致，说明我 macbook 硬件没问题\r\n- 进 recovery，在 recovery 里面用终端的 dd 来测速，跟 macOS 正常进入系统时（缓慢的）结果是一致的，说明不太可能是我安装的第三方软件导致的问题，macOS 本身纯净的系统就有问题\r\n\r\n另外我也做了一些测试，确保了 macOS 上的 dd 命令是没问题的。我测试了 Finder 复制文件、rsync 、FileZilla，还有不同版本的 dd，例如 Homebrew 装的 GNU dd，现象都完全一致。\r\n\r\n**我觉得通过以上测试可以几乎 100% 说明是 macOS 系统（内核）有问题，无法以正常速度读写 USB 外置磁盘。**\r\n\r\n就在我写上面这些话时，我一个同学帮我测试了他的 macOS 上面的情况（跟我电脑不是同一年的款，都是最新版系统），以及跟其他电脑上读取同一块盘的速度对比，**他的电脑和他的硬盘也有完全一样的问题。**\r\n\r\n附上我环境的参数：\r\n\r\nmacOS Big Sur 11.3.1 (20E241)\r\nMacBook Pro (13-inch, 2018, Four Thunderbolt 3 Ports)\r\n移动硬盘：WD Elements 2620 (5 TB)\r\n移动 SSD：Samsung Portable SSD T5 (1 TB)\r\n\r\n**这个问题导致 macbook 几乎无法正常使用任何外接磁盘，不知道有没有其他人也遇到这个问题。大家有外置盘的可以测试一下自己的电脑有没有相同的问题，回复的时候最好附上系统版本和机器型号**","content_rendered":"<p>今天往移动硬盘里复制一些文件，发现速度奇慢（~ 10 MB/s，有的时候甚至 4 MB/s 都不到）。</p>\n<p>这个盘是我用来 Time Machine 备份的盘，所以我第一反应就是 Time Machine 在运行，况且这种 2.5 寸的 SMR 盘本来也快不到哪里去。于是我果断<strong>把 Time Machine 关了</strong>，并且确认了这块盘没有进程在读写，然后继续复制，发现还是非常慢，甚至磁盘工具（ Disk Utility.app ）打开的时候都会卡很久。</p>\n<p>我猜想最可能是电脑开机太久出了什么 bug，或者磁盘碎片太多了，或者移动硬盘坏了。还有可能是 USB 转 Type-C 的转接头出了什么问题或者电脑硬件坏了。</p>\n<p>我进行了一些测试，感觉整个事情变得越来越蹊跷：</p>\n<ul>\n<li>重启电脑，没有变化</li>\n<li>测试<strong>读</strong>文件的速度，发现<strong>读</strong>跟<strong>写</strong>一样慢，下面的实验都是在测读取速度（因为盘上有数据，想测写入必须要挂载）</li>\n<li>为了避免是文件系统的问题，把文件系统卸载，然后用 dd 命令直接读裸盘，速度稳定在 16 MB/s</li>\n<li>换用不同的转接头（带供电和不带供电）和不同的雷电口，没有区别</li>\n<li>把移动硬盘用相同的转接头插在另一台 Linux 机器上，dd 命令读裸盘，速度稳定在 70 多 MB/s，这说明硬盘没问题</li>\n<li>拿出我的 Type-C 外置 SSD，在 macOS 上用 dd 测试读裸盘速度，<strong>45 MB/s</strong>，把这块 SSD 插 Linux 机器上面，<strong>540 MB/s</strong></li>\n<li>拿出一个 U 盘，在 macOS 上 dd 读 15 MB/s，在 Linux 机器上 42 MB/s</li>\n<li>通过 Type-C 扩展坞可以正常使用外接显示器、千兆网（可以满速）</li>\n<li>在扩展坞上面同时插两个盘（上面说的移动硬盘和 U 盘），两个盘可以同时稳定在上面说的速度</li>\n</ul>\n<p>另外补充一句，我的这几个盘之前在 macbook 上都<strong>跑到过正常的速度</strong>，不是一直这么慢。但是我最近没有进行对读写速度比较敏感的工作，也就有很长一段时间没关注过外置磁盘的速度了，不知道这个问题是什么时候开始有的。</p>\n<p>这就有趣了，不管什么盘，只要是 USB 外接，就远远跑不到正常速度，并且速度的峰值还不相同。到这里几乎只剩下了两种可能，一种是我电脑硬件坏了，另一种是 macOS 系统有问题。我又花了一些时间做了如下测试：</p>\n<ul>\n<li>进 recovery，把安全启动相关选项关掉，把 macbook 通过 U 盘启动进 Ubuntu Live，然后对上述几块盘进行测试，读取速度都可以跑满，跟 Linux 机器的测速结果一致，说明我 macbook 硬件没问题</li>\n<li>进 recovery，在 recovery 里面用终端的 dd 来测速，跟 macOS 正常进入系统时（缓慢的）结果是一致的，说明不太可能是我安装的第三方软件导致的问题，macOS 本身纯净的系统就有问题</li>\n</ul>\n<p>另外我也做了一些测试，确保了 macOS 上的 dd 命令是没问题的。我测试了 Finder 复制文件、rsync 、FileZilla，还有不同版本的 dd，例如 Homebrew 装的 GNU dd，现象都完全一致。</p>\n<p><strong>我觉得通过以上测试可以几乎 100% 说明是 macOS 系统（内核）有问题，无法以正常速度读写 USB 外置磁盘。</strong></p>\n<p>就在我写上面这些话时，我一个同学帮我测试了他的 macOS 上面的情况（跟我电脑不是同一年的款，都是最新版系统），以及跟其他电脑上读取同一块盘的速度对比，<strong>他的电脑和他的硬盘也有完全一样的问题。</strong></p>\n<p>附上我环境的参数：</p>\n<p>macOS Big Sur 11.3.1 (20E241)\nMacBook Pro (13-inch, 2018, Four Thunderbolt 3 Ports)\n移动硬盘：WD Elements 2620 (5 TB)\n移动 SSD：Samsung Portable SSD T5 (1 TB)</p>\n<p><strong>这个问题导致 macbook 几乎无法正常使用任何外接磁盘，不知道有没有其他人也遇到这个问题。大家有外置盘的可以测试一下自己的电脑有没有相同的问题，回复的时候最好附上系统版本和机器型号</strong></p>\n","last_modified":1621060317,"replies":8,"id":777094},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_large.png?m=1618811339","name":"qna","avatar_normal":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_normal.png?m=1618811339","title":"问与答","url":"https://www.v2ex.com/go/qna","topics":172406,"footer":"","header":"一个更好的世界需要你持续地提出好问题。","title_alternative":"Questions and Answers","avatar_mini":"https://cdn.v2ex.com/navatar/c20a/d4d7/12_mini.png?m=1618811339","stars":3226,"aliases":[],"root":false,"id":12,"parent_node_name":"v2ex"},"member":{"username":"dayeye2006199","website":null,"github":null,"psn":null,"avatar_normal":"https://cdn.v2ex.com/gravatar/c94dd32e4893e6adede68c44aee77ac0?s=24&d=retro","bio":null,"url":"https://www.v2ex.com/u/dayeye2006199","tagline":null,"twitter":null,"created":1471630236,"avatar_large":"https://cdn.v2ex.com/gravatar/c94dd32e4893e6adede68c44aee77ac0?s=24&d=retro","avatar_mini":"https://cdn.v2ex.com/gravatar/c94dd32e4893e6adede68c44aee77ac0?s=24&d=retro","location":null,"btc":null,"id":187904},"last_reply_by":"GopherDaily","last_touched":1621064074,"title":"海归回来创业公司注册在什么城市比较好呢？","url":"https://www.v2ex.com/t/777088","created":1621058725,"content":"各位彦祖，小弟已经在美国开始做一个创业企业，现在想海归国内，注册一个实体，主要用来对接国内的客户，和招聘当地的工程和数据团队。\r\n\r\n不考虑我个人的落户问题，主要考虑创业环境、招聘难度、融资环境、生活成本、当地政策匹配，想听听各位有什么比较好的城市推荐？","content_rendered":"<p>各位彦祖，小弟已经在美国开始做一个创业企业，现在想海归国内，注册一个实体，主要用来对接国内的客户，和招聘当地的工程和数据团队。</p>\n<p>不考虑我个人的落户问题，主要考虑创业环境、招聘难度、融资环境、生活成本、当地政策匹配，想听听各位有什么比较好的城市推荐？</p>\n","last_modified":1621058896,"replies":8,"id":777088},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/84d9/ee44/199_large.png?m=1584400564","name":"dns","avatar_normal":"https://cdn.v2ex.com/navatar/84d9/ee44/199_normal.png?m=1584400564","title":"DNS","url":"https://www.v2ex.com/go/dns","topics":1700,"footer":"","header":"互联网基础协议——DNS","title_alternative":"DNS","avatar_mini":"https://cdn.v2ex.com/navatar/84d9/ee44/199_mini.png?m=1584400564","stars":2014,"aliases":[],"root":false,"id":199,"parent_node_name":"devops"},"member":{"username":"learningman","website":"https://learningman.top","github":"Zxilly","psn":"","avatar_normal":"https://cdn.v2ex.com/avatar/7006/4bae/292882_mini.png?m=1559127904","bio":"","url":"https://www.v2ex.com/u/learningman","tagline":"","twitter":"","created":1519148002,"avatar_large":"https://cdn.v2ex.com/avatar/7006/4bae/292882_mini.png?m=1559127904","avatar_mini":"https://cdn.v2ex.com/avatar/7006/4bae/292882_mini.png?m=1559127904","location":"","btc":"","id":292882},"last_reply_by":"billlee","last_touched":1621062319,"title":"国内的云服务商现在是 DoT 都不允许建立了吗？","url":"https://www.v2ex.com/t/777070","created":1621051825,"content":"今天上午大概 10 点突然 DNS 挂了，压根没往这个方向想，调了半天试了一下 `openssl s_client -connect x.x.x.x:853`，直接看到了熟悉的 `write:errno=10054`。\r\n\r\n在服务器上 `openssl s_client -connect 127.0.0.1:853` 是握手失败，因为没发 CN 算是正常的\r\n\r\n所以现在是国内自建的 DoT 也不成了？","content_rendered":"<p>今天上午大概 10 点突然 DNS 挂了，压根没往这个方向想，调了半天试了一下 <code>openssl s_client -connect x.x.x.x:853</code>，直接看到了熟悉的 <code>write:errno=10054</code>。</p>\n<p>在服务器上 <code>openssl s_client -connect 127.0.0.1:853</code> 是握手失败，因为没发 CN 算是正常的</p>\n<p>所以现在是国内自建的 DoT 也不成了？</p>\n","last_modified":1621051825,"replies":8,"id":777070},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/b6d7/67d2/22_large.png?m=1607656854","name":"macos","avatar_normal":"https://cdn.v2ex.com/navatar/b6d7/67d2/22_normal.png?m=1607656854","title":"macOS","url":"https://www.v2ex.com/go/macos","topics":16586,"footer":"<a href=\"/mbp\">MacBook Pro</a> 及 <a href=\"/go/imac\">iMac</a> 等 <a href=\"/go/apple\">Apple</a> 公司设计的计算机所运行的操作系统。<a href=\"/go/idev\">iOS</a> 的基础。","header":"The world’s most advanced desktop operating system.","title_alternative":"macOS","avatar_mini":"https://cdn.v2ex.com/navatar/b6d7/67d2/22_mini.png?m=1607656854","stars":4301,"aliases":[],"root":false,"id":22,"parent_node_name":"os"},"member":{"username":"xin1284","website":null,"github":null,"psn":null,"avatar_normal":"https://cdn.v2ex.com/avatar/4912/9551/29340_mini.png?m=1352088109","bio":null,"url":"https://www.v2ex.com/u/xin1284","tagline":null,"twitter":null,"created":1352088060,"avatar_large":"https://cdn.v2ex.com/avatar/4912/9551/29340_mini.png?m=1352088109","avatar_mini":"https://cdn.v2ex.com/avatar/4912/9551/29340_mini.png?m=1352088109","location":null,"btc":null,"id":29340},"last_reply_by":"EIJAM","last_touched":1621060055,"title":"为什么 mac 版本的 edge 不区分 m1 版本和 intel 版本","url":"https://www.v2ex.com/t/777052","created":1621046652,"content":"安装包做的那么大，太占用空间了吧，而且这货更新频率还非常高，如果做的小一点更新起来也快一些。","content_rendered":"<p>安装包做的那么大，太占用空间了吧，而且这货更新频率还非常高，如果做的小一点更新起来也快一些。</p>\n","last_modified":1621046652,"replies":8,"id":777052},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1620107083","name":"programmer","avatar_normal":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1620107083","title":"程序员","url":"https://www.v2ex.com/go/programmer","topics":44464,"footer":"","header":"While code monkeys are not eating bananas, they're coding.","title_alternative":"Programmer","avatar_mini":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1620107083","stars":7377,"aliases":[],"root":false,"id":300,"parent_node_name":"computer"},"member":{"username":"muzihuaner","website":"https://quickso.cn","github":"muzihuaner","psn":"","avatar_normal":"https://cdn.v2ex.com/avatar/df89/c79c/428554_mini.png?m=1592796535","bio":"欢哥网创始人","url":"https://www.v2ex.com/u/muzihuaner","tagline":"JUST DO IT","twitter":"","created":1562811839,"avatar_large":"https://cdn.v2ex.com/avatar/df89/c79c/428554_mini.png?m=1592796535","avatar_mini":"https://cdn.v2ex.com/avatar/df89/c79c/428554_mini.png?m=1592796535","location":"中国•山西•怀仁","btc":"","id":428554},"last_reply_by":"xiaopc","last_touched":1621058594,"title":"你们在 vercel 托管的网页能访问么？","url":"https://www.v2ex.com/t/777043","created":1621042320,"content":"今天早上想打开，发现拒绝连接","content_rendered":"<p>今天早上想打开，发现拒绝连接</p>\n","last_modified":1621042320,"replies":8,"id":777043},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/1f0e/3dad/19_large.png?m=1588235467","name":"beijing","avatar_normal":"https://cdn.v2ex.com/navatar/1f0e/3dad/19_normal.png?m=1588235467","title":"北京","url":"https://www.v2ex.com/go/beijing","topics":3156,"footer":"","header":"","title_alternative":"Beijing","avatar_mini":"https://cdn.v2ex.com/navatar/1f0e/3dad/19_mini.png?m=1588235467","stars":1865,"aliases":[],"root":false,"id":19,"parent_node_name":"cn"},"member":{"username":"icecreamz","website":null,"github":null,"psn":null,"avatar_normal":"https://cdn.v2ex.com/gravatar/422da581eaff2aa46da1ba1390408acc?s=24&d=retro","bio":null,"url":"https://www.v2ex.com/u/icecreamz","tagline":null,"twitter":null,"created":1620276292,"avatar_large":"https://cdn.v2ex.com/gravatar/422da581eaff2aa46da1ba1390408acc?s=24&d=retro","avatar_mini":"https://cdn.v2ex.com/gravatar/422da581eaff2aa46da1ba1390408acc?s=24&d=retro","location":null,"btc":null,"id":544557},"last_reply_by":"leeOrz","last_touched":1621065997,"title":"北京租房老破小需要注意什么？","url":"https://www.v2ex.com/t/777089","created":1621058918,"content":"我是应届生，最近在**豆瓣**上联系到一个租客准备转租，于是我加了微信，**还没看房**。由于我是第一次租房，看房之前不知道该注意什么，希望各位老百京儿们多多指点。\r\n\r\n### 优点：\r\n房东直租且便宜，主卧朝南空间大（无阳台）。\r\n\r\n### 缺点：\r\n老小区，楼顶，理论上冬冷夏热（甚至可能下雨漏水）。\r\n\r\n### 疑点：\r\n1. 租客说要马上要离开北京，希望我赶紧跟他签；\r\n2. 租期两个月之后就到了，租客承诺之后可以和房东直租，价格不变，无法判断；\r\n3. 我不能马上入住，但租客希望我看完房立即签，这样我得多交一星期房租。\r\n\r\n### 问题：\r\n1. 老小区该注意哪些雷点？\r\n2. 如何验证是否为房东直租？\r\n3. 租客希望我看房即签约，签约他就离开了。万一房子有隐患怎么办？比如房东说前任租客弄坏了他的东西之类的。","content_rendered":"<p>我是应届生，最近在<strong>豆瓣</strong>上联系到一个租客准备转租，于是我加了微信，<strong>还没看房</strong>。由于我是第一次租房，看房之前不知道该注意什么，希望各位老百京儿们多多指点。</p>\n<h3>优点：</h3>\n<p>房东直租且便宜，主卧朝南空间大（无阳台）。</p>\n<h3>缺点：</h3>\n<p>老小区，楼顶，理论上冬冷夏热（甚至可能下雨漏水）。</p>\n<h3>疑点：</h3>\n<ol>\n<li>租客说要马上要离开北京，希望我赶紧跟他签；</li>\n<li>租期两个月之后就到了，租客承诺之后可以和房东直租，价格不变，无法判断；</li>\n<li>我不能马上入住，但租客希望我看完房立即签，这样我得多交一星期房租。</li>\n</ol>\n<h3>问题：</h3>\n<ol>\n<li>老小区该注意哪些雷点？</li>\n<li>如何验证是否为房东直租？</li>\n<li>租客希望我看房即签约，签约他就离开了。万一房子有隐患怎么办？比如房东说前任租客弄坏了他的东西之类的。</li>\n</ol>\n","last_modified":1621058918,"replies":7,"id":777089},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/9a11/5815/52_large.png?m=1618811288","name":"hardware","avatar_normal":"https://cdn.v2ex.com/navatar/9a11/5815/52_normal.png?m=1618811288","title":"硬件","url":"https://www.v2ex.com/go/hardware","topics":3837,"footer":"","header":"硬件发烧友的讨论节点","title_alternative":"Hardware","avatar_mini":"https://cdn.v2ex.com/navatar/9a11/5815/52_mini.png?m=1618811288","stars":1773,"aliases":[],"root":false,"id":52,"parent_node_name":"computer"},"member":{"username":"opentrade","website":"https://rustdesk.com","github":"","psn":"","avatar_normal":"https://cdn.v2ex.com/avatar/3bde/bf6c/366406_mini.png?m=1543388759","bio":"https://github.com/rustdesk/rustdesk","url":"https://www.v2ex.com/u/opentrade","tagline":"主人何为言少钱，径须沽取对君酌","twitter":"","created":1543387714,"avatar_large":"https://cdn.v2ex.com/avatar/3bde/bf6c/366406_mini.png?m=1543388759","avatar_mini":"https://cdn.v2ex.com/avatar/3bde/bf6c/366406_mini.png?m=1543388759","location":"SG","btc":"","id":366406},"last_reply_by":"um1ng","last_touched":1621046507,"title":"求推荐性价比高的 4k 屏 Windows 笔记本","url":"https://www.v2ex.com/t/777042","created":1621041627,"content":"开发用途，价钱 8k 以内，颜值控，2k 屏也可以接受","content_rendered":"开发用途，价钱 8k 以内，颜值控，2k 屏也可以接受","last_modified":1621054200,"replies":7,"id":777042},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/b6d7/67d2/22_large.png?m=1607656854","name":"macos","avatar_normal":"https://cdn.v2ex.com/navatar/b6d7/67d2/22_normal.png?m=1607656854","title":"macOS","url":"https://www.v2ex.com/go/macos","topics":16586,"footer":"<a href=\"/mbp\">MacBook Pro</a> 及 <a href=\"/go/imac\">iMac</a> 等 <a href=\"/go/apple\">Apple</a> 公司设计的计算机所运行的操作系统。<a href=\"/go/idev\">iOS</a> 的基础。","header":"The world’s most advanced desktop operating system.","title_alternative":"macOS","avatar_mini":"https://cdn.v2ex.com/navatar/b6d7/67d2/22_mini.png?m=1607656854","stars":4301,"aliases":[],"root":false,"id":22,"parent_node_name":"os"},"member":{"username":"sillydaddy","website":null,"github":null,"psn":null,"avatar_normal":"https://cdn.v2ex.com/avatar/be86/c551/472822_mini.png?m=1596086495","bio":null,"url":"https://www.v2ex.com/u/sillydaddy","tagline":null,"twitter":null,"created":1582803020,"avatar_large":"https://cdn.v2ex.com/avatar/be86/c551/472822_mini.png?m=1596086495","avatar_mini":"https://cdn.v2ex.com/avatar/be86/c551/472822_mini.png?m=1596086495","location":null,"btc":null,"id":472822},"last_reply_by":"billlee","last_touched":1621062454,"title":"可以限定 macOS App 只能访问某个**子**文件夹吗？","url":"https://www.v2ex.com/t/777087","created":1621058499,"content":"比如～\\Document(文稿)文件夹下面的 SubfolderA 。\r\n\r\n“安全与隐私”里的设置，只能设置“下载”“文稿”“桌面”这些大类的文件夹。\r\n\r\n“我对隐私问题的态度更加保守，相对来说也没那么懒。如果我可以用便利换取隐私、安全，在很多情况下我就愿意这么做。”","content_rendered":"比如～\\Document(文稿)文件夹下面的 SubfolderA 。<br /><br />“安全与隐私”里的设置，只能设置“下载”“文稿”“桌面”这些大类的文件夹。<br /><br />“我对隐私问题的态度更加保守，相对来说也没那么懒。如果我可以用便利换取隐私、安全，在很多情况下我就愿意这么做。”","last_modified":1621058499,"replies":6,"id":777087},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/9a11/5815/52_large.png?m=1618811288","name":"hardware","avatar_normal":"https://cdn.v2ex.com/navatar/9a11/5815/52_normal.png?m=1618811288","title":"硬件","url":"https://www.v2ex.com/go/hardware","topics":3838,"footer":"","header":"硬件发烧友的讨论节点","title_alternative":"Hardware","avatar_mini":"https://cdn.v2ex.com/navatar/9a11/5815/52_mini.png?m=1618811288","stars":1773,"aliases":[],"root":false,"id":52,"parent_node_name":"computer"},"member":{"username":"LongLights","website":"https://www.ugediao.com/","github":"","psn":"","avatar_normal":"https://cdn.v2ex.com/avatar/9b67/4593/291331_mini.png?m=1602313740","bio":"","url":"https://www.v2ex.com/u/LongLights","tagline":"","twitter":"","created":1518271127,"avatar_large":"https://cdn.v2ex.com/avatar/9b67/4593/291331_mini.png?m=1602313740","avatar_mini":"https://cdn.v2ex.com/avatar/9b67/4593/291331_mini.png?m=1602313740","location":"","btc":"","id":291331},"last_reply_by":"SniperXu","last_touched":1621065728,"title":"求解 mba 连 4k 显示器的正确姿势","url":"https://www.v2ex.com/t/777082","created":1621055885,"content":"迫于生计卖了游戏本入了 m1 款的 mba，平时放家里时仅用来看 Netflix 。\r\n\r\n但是用了 typec 转 dp 的线，由于没有 hdcp2.2 Netflix 只能看 1080p，遂买了一个绿联拓展坞用 hdmi2.1 的线，然后还是没有 hdcp2.2 （经测试是扩展坞的问题，仅用 hdmi 线连其他电脑是有 4k 的）\r\n\r\n遂求一个 mba 正确的连接 4k 显示器的姿势","content_rendered":"<p>迫于生计卖了游戏本入了 m1 款的 mba，平时放家里时仅用来看 Netflix 。</p>\n<p>但是用了 typec 转 dp 的线，由于没有 hdcp2.2 Netflix 只能看 1080p，遂买了一个绿联拓展坞用 hdmi2.1 的线，然后还是没有 hdcp2.2 （经测试是扩展坞的问题，仅用 hdmi 线连其他电脑是有 4k 的）</p>\n<p>遂求一个 mba 正确的连接 4k 显示器的姿势</p>\n","last_modified":1621061343,"replies":6,"id":777082},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_large.png?m=1620107083","name":"programmer","avatar_normal":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_normal.png?m=1620107083","title":"程序员","url":"https://www.v2ex.com/go/programmer","topics":44465,"footer":"","header":"While code monkeys are not eating bananas, they're coding.","title_alternative":"Programmer","avatar_mini":"https://cdn.v2ex.com/navatar/94f6/d7e0/300_mini.png?m=1620107083","stars":7377,"aliases":[],"root":false,"id":300,"parent_node_name":"computer"},"member":{"username":"littlerainer","website":null,"github":null,"psn":null,"avatar_normal":"https://cdn.v2ex.com/gravatar/4a9935b61f4df2cb1c1f693da08075c8?s=24&d=retro","bio":null,"url":"https://www.v2ex.com/u/littlerainer","tagline":null,"twitter":null,"created":1564242837,"avatar_large":"https://cdn.v2ex.com/gravatar/4a9935b61f4df2cb1c1f693da08075c8?s=24&d=retro","avatar_mini":"https://cdn.v2ex.com/gravatar/4a9935b61f4df2cb1c1f693da08075c8?s=24&d=retro","location":null,"btc":null,"id":432457},"last_reply_by":"ipwx","last_touched":1621064162,"title":"研究生学网安出路怎么样?","url":"https://www.v2ex.com/t/777079","created":1621055379,"content":"最近研究生选方向，感觉 ai 太火也太卷了，感觉中科院信工所信息安全国重挺不错的，就想知道网安这个专业怎么样？","content_rendered":"<p>最近研究生选方向，感觉 ai 太火也太卷了，感觉中科院信工所信息安全国重挺不错的，就想知道网安这个专业怎么样？</p>\n","last_modified":1621055379,"replies":6,"id":777079},{"node":{"avatar_large":"https://cdn.v2ex.com/navatar/f61d/6947/375_large.png?m=1585387643","name":"go","avatar_normal":"https://cdn.v2ex.com/navatar/f61d/6947/375_normal.png?m=1585387643","title":"Go","url":"https://www.v2ex.com/go/go","topics":1880,"footer":"","header":"Go 是一个开源的编程语言，它能让构造简单、可靠且高效的软件变得容易。","title_alternative":"The Go Programming Language","avatar_mini":"https://cdn.v2ex.com/navatar/f61d/6947/375_mini.png?m=1585387643","stars":2655,"aliases":[],"root":false,"id":375,"parent_node_name":"programming"},"member":{"username":"wewin","website":null,"github":null,"psn":null,"avatar_normal":"https://cdn.v2ex.com/avatar/5c2a/ce37/227221_mini.png?m=1606373092","bio":null,"url":"https://www.v2ex.com/u/wewin","tagline":null,"twitter":null,"created":1492774101,"avatar_large":"https://cdn.v2ex.com/avatar/5c2a/ce37/227221_mini.png?m=1606373092","avatar_mini":"https://cdn.v2ex.com/avatar/5c2a/ce37/227221_mini.png?m=1606373092","location":null,"btc":null,"id":227221},"last_reply_by":"march1993","last_touched":1621059081,"title":"使用 golang 的 unsafe 操作结构体私有属性","url":"https://www.v2ex.com/t/777059","created":1621048222,"content":"开篇之前，咱们先考虑一个问题，golang 中如何访问其他包的一个公有结构的私有属性，如下：\r\n\r\nuser 包\r\n```\r\npackage user\r\n\r\ntype Info struct {\r\n\tname string\r\n\tage int\r\n}\r\n\r\nfunc NewUser(name string, age int) Info {\r\n\treturn Info{\r\n\t\tname: name,\r\n\t\tage:  age,\r\n\t}\r\n}\r\n```\r\nmain 包\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"grpcTest/grpcCodeRead/littlecases/unsafe/user\" #  倒入 user 包\r\n)\r\n\r\nfunc main() {\r\n\tu := user.NewUser(\"wei.wei\", 18)\r\n\r\n\tu.name = \"wweeii\"\r\n\tu.age = 18\r\n}\r\n```\r\n\r\n如上，我们在 main 包中调用了 user 包的公有函数 NewUser，创建了对象 u，想在 main 中通过 `u.name = \"wweeii\"` 和 `u.age = 18`  来修改对象 u 的 name 和 age 属性，是做不到了，运行 go run main.go 编译是会报错的 :\r\n```\r\n# command-line-arguments\r\n./main.go:10:3: u.name undefined (cannot refer to unexported field or method name)\r\n./main.go:11:3: u.age undefined (cannot refer to unexported field or method age)\r\n```\r\n\r\n我们能想到的一个可行的方法如下：\r\nuser package\r\n```\r\npackage user\r\n\r\ntype Info struct {\r\n\tname string\r\n\tage int\r\n}\r\n\r\nfunc NewUser(name string, age int) Info {\r\n\treturn Info{\r\n\t\tname: name,\r\n\t\tage:  age,\r\n\t}\r\n}\r\n\r\nfunc (i *Info) NameSetter(name string) {\r\n\ti.name = name\r\n}\r\n\r\nfunc (i *Info) NameGetter()string {\r\n\treturn i.name\r\n}\r\n\r\nfunc (i *Info) AgeSetter(age int) {\r\n\ti.age = age\r\n}\r\n\r\nfunc (i *Info) AgeGetter() int {\r\n\treturn i.age\r\n}\r\n```\r\n\r\nmain package\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"grpcTest/grpcCodeRead/littlecases/unsafe/user\"\r\n)\r\n\r\nfunc main() {\r\n\tu := user.NewUser(\"wei.wei\", 18)\r\n\r\n\t//u.name = \"wweeii\"\r\n\t//u.age = 18\r\n\tu.NameSetter(\"wweeii\")\r\n\tu.AgeSetter(20)\r\n\r\n\tfmt.Println(u)\r\n}\r\n```\r\n在 user 包中添加公有的 getter 和 setter 方法，来访问私有的属性。\r\n\r\n但是如果 user 包没有提供访问私有变量的方法呢？我们怎么才能读取到对象 u 的 name 和 age 属性，这里就可以用到 golang 中提供的 unsafe 包。\r\n\r\n如下：user 包不变:\r\n\r\n```\r\npackage user\r\n\r\ntype Info struct {\r\n\tname string\r\n\tage int\r\n}\r\n\r\nfunc NewUser(name string, age int) Info {\r\n\treturn Info{\r\n\t\tname: name,\r\n\t\tage:  age,\r\n\t}\r\n}\r\n```\r\n\r\nmain 包改成:\r\n\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"grpcTest/grpcCodeRead/littlecases/unsafe/user\"\r\n\t\"unsafe\"\r\n)\r\n\r\nfunc main() {\r\n\tu := user.NewUser(\"wei.wei\", 18)\r\n\r\n\tpName := (*string)(unsafe.Pointer(&u))\r\n\tfmt.Println(*pName)\r\n\r\n\tpAge := (*int)(unsafe.Pointer(uintptr(unsafe.Pointer(&u)) + unsafe.Sizeof(string(\"\"))))\r\n\tfmt.Println(*pAge)\r\n}\r\n```\r\n测试运行 `go run main.go` 就可以访问对象 u 的私有属性 name 和 age 了。\r\n\r\n当然看到这里，大家估计还是一头雾水，没关系，不用明白上面代码是怎么做到的，那是因为咱们还不知道 unsafe 是什么，更不知道上面用到的 unsafe.Pointer 、unsafe.Sizeof 、uintptr 是什么，先往后看，等了解了 unsafe 后再来看这段代码，咱们就能明白了。\r\n\r\n\r\n### unsafe\r\n\r\n官方文档： [https://golang.org/pkg/unsafe]( https://golang.org/pkg/unsafe/)\r\n\r\nunsafe 是 golang 提供的一个包，通过这个包可以实现不同类型指针之间的转化，可以实现对指针的计算，来访问变量的属性。\r\n\r\nunsafe 包是一种不安全的包，它能绕过编译器检查，直接快速的访问和修改一些变量，从它的命名也能看出设计者是希望谨慎使用它的，至少这个包名导致咱们在使用它的时候，会让人产生不舒服的感觉。\r\n\r\nunsafe 提供了两个类型和三个函数：\r\n```\r\ntype ArbitraryType int\r\n\r\ntype Pointer *ArbitraryType\r\n\r\nfunc Sizeof(x ArbitraryType) uintptr\r\n\r\nfunc Offsetof(x ArbitraryType) uintptr\r\n\r\nfunc Alignof(x ArbitraryType) uintptr\r\n```\r\n\r\nArbitraryType 是一个 int 类型的重定义，从字面看是任意类型，golang 中任意类型都可以赋值给 ArbitraryType，Sizeof 、Offsetof 、Alignof 三个方法的形参是 (x ArbitraryType)，也就是这三个函数可以接受任意的一个类型，并返回一个 uintptr 类型的值。\r\n\r\nPointer 是一个 *ArbitraryType 的重定义，unsafe.Pointer(*x) 可以将 *x 指针转为 unsafe.Pointer 类型。\r\n\r\nuintptr 是内置的类型，可以理解为可以参与计算的指针地址。\r\n\r\n- unsafe.Sizeof\r\n   Sizeof 可以接受任意类型，返回该类型在当前操作系统上占用的字节数，这个函数的返回值和系统是相关的，比如一个 int 型在 32 位操作系统上返回 4，在 64 位操作系统上返回 8，在我的  64 位电脑上返回如下：\r\n ```\r\n  fmt.Println(unsafe.Sizeof(string(\"\")))  // 返回：16\r\n  fmt.Println(unsafe.Sizeof(int(0)))    // 返回：8\r\n  fmt.Println(unsafe.Sizeof(user.Info{})) // 返回 24\r\n ```\r\n看完上面的例子大家想想 unsafe.Sizeof(string(\"Hi\")) 返回值是多少？没错这里返回的是 16，因为 string 这种类型在 64 位操作系统上站 16 个字节，和参数中是几个字符没有关系。\r\n\r\n- unsafe.Alignof 和 unsafe.Offsetof\r\n \r\n 看如下例子：\r\n ```\r\n package main\r\n\r\n import (\r\n\t\"fmt\"\r\n\t\"unsafe\"\r\n)\r\n\r\n type XTest struct {\r\n\ta bool\r\n\tb int16\r\n\tc []int\r\n}\r\n\r\n func main() {\r\n\tx := XTest{}\r\n\tfmt.Println(unsafe.Alignof(x.a))\r\n\tfmt.Println(unsafe.Alignof(x.b))\r\n\tfmt.Println(unsafe.Alignof(x.c))\r\n\r\n\tfmt.Println(\"--\")\r\n\r\n\tfmt.Println(unsafe.Offsetof(x.a))\r\n\tfmt.Println(unsafe.Offsetof(x.b))\r\n\tfmt.Println(unsafe.Offsetof(x.c))\r\n }\r\n ```\r\n执行 go run main.go 后输入如下:\r\n ```\r\n1\r\n2\r\n8\r\n--\r\n0\r\n2\r\n8\r\n ```\r\n\r\n unsafe.Alignof 返回的是类型的对齐方式，unsafe.Offsetof 返回的是属性相对于结构体开头的偏移量。\r\n\r\n 看了上面的简介，相信大家一定还是思绪万千，甚至还有些小小的思维混乱，这里我们总结下 Pointer 和 uintptr 的使用，相信掌握了如下的规律，稍加琢磨就能知道掌握 unsafe 包怎么使用：\r\n\r\n  1. 任何的指针类型 T 都可以转为一个 Pointer 类型 ，转化的方式是 unsafe.Pointer(T)\r\n  2. 任何一个 Pointer 类型都可以转为 uintptr 类型\r\n  3. 任何一个 uintptr 类型都可以转为一个 Pointer 类型，Pointer 类型可以转为指针类型 T\r\n  4. uintptr 可以参与计算，Pointer 类型不能参与计算\r\n\r\n  看完上面的 4 个点，大家使用 unsafe 进行指针计算，脑子里一定有了如下的计算路线:\r\n \r\n  `指针 T -> unsafe.Pointer -> uintptr -> 做加减计算 -> unsafe.Pointer  -> T`\r\n\r\n 有 C 语言基础的同学一定有通过指针来遍历数组的经历，这里的 uintptr 就是可以看作是一个和 c 中指针相同的东西，是可以计算的指针，现在我们再解释下上面的代码：\r\n  ```\r\nu := user.NewUser(\"wei.wei\", 18)\r\npName := (*string)(unsafe.Pointer(&u))\r\nfmt.Println(*pName)\r\n\r\n pAge := (*int)(unsafe.Pointer(uintptr(unsafe.Pointer(&u)) + unsafe.Sizeof(string(\"\"))))\r\nfmt.Println(*pAge)\r\n ```\r\n这里的 `(*string)(unsafe.Pointer(&u))` 应该是可以理解的，就是拿到了指向对象 u 地址头部的一个指针，这个指针指向的正好是第一个 string 类型的变量，所以 *pName 就是 \"wei.wei\"。\r\n\r\n `pAge := (*int)(unsafe.Pointer(uintptr(unsafe.Pointer(&u)) + unsafe.Sizeof(string(\"\"))))` 这一句中 `unsafe.Pointer(&u)` 指向的对象 u 的头部，u 的第一元素是 string 类型，第二个元素是一个 int 类型，在 u 的指针头部，加一个 string 类型的 unsafe.Sizeof，也就是加上代码中的 `unsafe.Sizeof(string(\"\"))` 就正好是一个指向到第二个元素 age 的头部的指针，因为 unsafe.Pointer(&u) 返回的是一个不可计算的类型，所以使用 uintptr 先转为一个可计算的 uintptr 类型，而 `unsafe.Sizeof(string(\"\"))` 返回的是一个可以计算的 uintptr 类型，这两者相加就得到了指向 age 元素的指针 pAge 所以 *pAge 就是 18","content_rendered":"<p>开篇之前，咱们先考虑一个问题，golang 中如何访问其他包的一个公有结构的私有属性，如下：</p>\n<p>user 包</p>\n<pre><code>package user\n\ntype Info struct {\n\tname string\n\tage int\n}\n\nfunc NewUser(name string, age int) Info {\n\treturn Info{\n\t\tname: name,\n\t\tage:  age,\n\t}\n}\n</code></pre>\n<p>main 包</p>\n<pre><code>package main\n\nimport (\n\t\"grpcTest/grpcCodeRead/littlecases/unsafe/user\" #  倒入 user 包\n)\n\nfunc main() {\n\tu := user.NewUser(\"wei.wei\", 18)\n\n\tu.name = \"wweeii\"\n\tu.age = 18\n}\n</code></pre>\n<p>如上，我们在 main 包中调用了 user 包的公有函数 NewUser，创建了对象 u，想在 main 中通过 <code><a href=\"http://u.name\" rel=\"nofollow\">u.name</a> = \"wweeii\"</code> 和 <code>u.age = 18</code>  来修改对象 u 的 name 和 age 属性，是做不到了，运行 go run main.go 编译是会报错的 :</p>\n<pre><code># command-line-arguments\n./main.go:10:3: u.name undefined (cannot refer to unexported field or method name)\n./main.go:11:3: u.age undefined (cannot refer to unexported field or method age)\n</code></pre>\n<p>我们能想到的一个可行的方法如下：\nuser package</p>\n<pre><code>package user\n\ntype Info struct {\n\tname string\n\tage int\n}\n\nfunc NewUser(name string, age int) Info {\n\treturn Info{\n\t\tname: name,\n\t\tage:  age,\n\t}\n}\n\nfunc (i *Info) NameSetter(name string) {\n\ti.name = name\n}\n\nfunc (i *Info) NameGetter()string {\n\treturn i.name\n}\n\nfunc (i *Info) AgeSetter(age int) {\n\ti.age = age\n}\n\nfunc (i *Info) AgeGetter() int {\n\treturn i.age\n}\n</code></pre>\n<p>main package</p>\n<pre><code>package main\n\nimport (\n\t\"fmt\"\n\t\"grpcTest/grpcCodeRead/littlecases/unsafe/user\"\n)\n\nfunc main() {\n\tu := user.NewUser(\"wei.wei\", 18)\n\n\t//u.name = \"wweeii\"\n\t//u.age = 18\n\tu.NameSetter(\"wweeii\")\n\tu.AgeSetter(20)\n\n\tfmt.Println(u)\n}\n</code></pre>\n<p>在 user 包中添加公有的 getter 和 setter 方法，来访问私有的属性。</p>\n<p>但是如果 user 包没有提供访问私有变量的方法呢？我们怎么才能读取到对象 u 的 name 和 age 属性，这里就可以用到 golang 中提供的 unsafe 包。</p>\n<p>如下：user 包不变:</p>\n<pre><code>package user\n\ntype Info struct {\n\tname string\n\tage int\n}\n\nfunc NewUser(name string, age int) Info {\n\treturn Info{\n\t\tname: name,\n\t\tage:  age,\n\t}\n}\n</code></pre>\n<p>main 包改成:</p>\n<pre><code>package main\n\nimport (\n\t\"fmt\"\n\t\"grpcTest/grpcCodeRead/littlecases/unsafe/user\"\n\t\"unsafe\"\n)\n\nfunc main() {\n\tu := user.NewUser(\"wei.wei\", 18)\n\n\tpName := (*string)(unsafe.Pointer(&amp;u))\n\tfmt.Println(*pName)\n\n\tpAge := (*int)(unsafe.Pointer(uintptr(unsafe.Pointer(&amp;u)) + unsafe.Sizeof(string(\"\"))))\n\tfmt.Println(*pAge)\n}\n</code></pre>\n<p>测试运行 <code>go run main.go</code> 就可以访问对象 u 的私有属性 name 和 age 了。</p>\n<p>当然看到这里，大家估计还是一头雾水，没关系，不用明白上面代码是怎么做到的，那是因为咱们还不知道 unsafe 是什么，更不知道上面用到的 unsafe.Pointer 、unsafe.Sizeof 、uintptr 是什么，先往后看，等了解了 unsafe 后再来看这段代码，咱们就能明白了。</p>\n<h3>unsafe</h3>\n<p>官方文档： <a href=\"https://golang.org/pkg/unsafe/\" rel=\"nofollow\">https://golang.org/pkg/unsafe</a></p>\n<p>unsafe 是 golang 提供的一个包，通过这个包可以实现不同类型指针之间的转化，可以实现对指针的计算，来访问变量的属性。</p>\n<p>unsafe 包是一种不安全的包，它能绕过编译器检查，直接快速的访问和修改一些变量，从它的命名也能看出设计者是希望谨慎使用它的，至少这个包名导致咱们在使用它的时候，会让人产生不舒服的感觉。</p>\n<p>unsafe 提供了两个类型和三个函数：</p>\n<pre><code>type ArbitraryType int\n\ntype Pointer *ArbitraryType\n\nfunc Sizeof(x ArbitraryType) uintptr\n\nfunc Offsetof(x ArbitraryType) uintptr\n\nfunc Alignof(x ArbitraryType) uintptr\n</code></pre>\n<p>ArbitraryType 是一个 int 类型的重定义，从字面看是任意类型，golang 中任意类型都可以赋值给 ArbitraryType，Sizeof 、Offsetof 、Alignof 三个方法的形参是 (x ArbitraryType)，也就是这三个函数可以接受任意的一个类型，并返回一个 uintptr 类型的值。</p>\n<p>Pointer 是一个 *ArbitraryType 的重定义，unsafe.Pointer(*x) 可以将 *x 指针转为 unsafe.Pointer 类型。</p>\n<p>uintptr 是内置的类型，可以理解为可以参与计算的指针地址。</p>\n<ul>\n<li>unsafe.Sizeof\nSizeof 可以接受任意类型，返回该类型在当前操作系统上占用的字节数，这个函数的返回值和系统是相关的，比如一个 int 型在 32 位操作系统上返回 4，在 64 位操作系统上返回 8，在我的  64 位电脑上返回如下：</li>\n</ul>\n<pre><code> fmt.Println(unsafe.Sizeof(string(\"\")))  // 返回：16\n fmt.Println(unsafe.Sizeof(int(0)))    // 返回：8\n fmt.Println(unsafe.Sizeof(user.Info{})) // 返回 24\n</code></pre>\n<p>看完上面的例子大家想想 unsafe.Sizeof(string(\"Hi\")) 返回值是多少？没错这里返回的是 16，因为 string 这种类型在 64 位操作系统上站 16 个字节，和参数中是几个字符没有关系。</p>\n<ul>\n<li>unsafe.Alignof 和 unsafe.Offsetof</li>\n</ul>\n<p>看如下例子：</p>\n<pre><code>package main\n\nimport (\n\"fmt\"\n\"unsafe\"\n)\n\ntype XTest struct {\na bool\nb int16\nc []int\n}\n\nfunc main() {\nx := XTest{}\nfmt.Println(unsafe.Alignof(x.a))\nfmt.Println(unsafe.Alignof(x.b))\nfmt.Println(unsafe.Alignof(x.c))\n\nfmt.Println(\"--\")\n\nfmt.Println(unsafe.Offsetof(x.a))\nfmt.Println(unsafe.Offsetof(x.b))\nfmt.Println(unsafe.Offsetof(x.c))\n}\n</code></pre>\n<p>执行 go run main.go 后输入如下:</p>\n<pre><code>1\n2\n8\n--\n0\n2\n8\n</code></pre>\n<p>unsafe.Alignof 返回的是类型的对齐方式，unsafe.Offsetof 返回的是属性相对于结构体开头的偏移量。</p>\n<p>看了上面的简介，相信大家一定还是思绪万千，甚至还有些小小的思维混乱，这里我们总结下 Pointer 和 uintptr 的使用，相信掌握了如下的规律，稍加琢磨就能知道掌握 unsafe 包怎么使用：</p>\n<ol>\n<li>任何的指针类型 T 都可以转为一个 Pointer 类型 ，转化的方式是 unsafe.Pointer(T)</li>\n<li>任何一个 Pointer 类型都可以转为 uintptr 类型</li>\n<li>任何一个 uintptr 类型都可以转为一个 Pointer 类型，Pointer 类型可以转为指针类型 T</li>\n<li>uintptr 可以参与计算，Pointer 类型不能参与计算</li>\n</ol>\n<p>看完上面的 4 个点，大家使用 unsafe 进行指针计算，脑子里一定有了如下的计算路线:</p>\n<p><code>指针 T -&gt; unsafe.Pointer -&gt; uintptr -&gt; 做加减计算 -&gt; unsafe.Pointer  -&gt; T</code></p>\n<p>有 C 语言基础的同学一定有通过指针来遍历数组的经历，这里的 uintptr 就是可以看作是一个和 c 中指针相同的东西，是可以计算的指针，现在我们再解释下上面的代码：</p>\n<pre><code>u := user.NewUser(\"wei.wei\", 18)\npName := (*string)(unsafe.Pointer(&amp;u))\nfmt.Println(*pName)\n\npAge := (*int)(unsafe.Pointer(uintptr(unsafe.Pointer(&amp;u)) + unsafe.Sizeof(string(\"\"))))\nfmt.Println(*pAge)\n</code></pre>\n<p>这里的 <code>(*string)(unsafe.Pointer(&amp;u))</code> 应该是可以理解的，就是拿到了指向对象 u 地址头部的一个指针，这个指针指向的正好是第一个 string 类型的变量，所以 *pName 就是 \"wei.wei\"。</p>\n<p><code>pAge := (*int)(unsafe.Pointer(uintptr(unsafe.Pointer(&amp;u)) + unsafe.Sizeof(string(\"\"))))</code> 这一句中 <code>unsafe.Pointer(&amp;u)</code> 指向的对象 u 的头部，u 的第一元素是 string 类型，第二个元素是一个 int 类型，在 u 的指针头部，加一个 string 类型的 unsafe.Sizeof，也就是加上代码中的 <code>unsafe.Sizeof(string(\"\"))</code> 就正好是一个指向到第二个元素 age 的头部的指针，因为 unsafe.Pointer(&amp;u) 返回的是一个不可计算的类型，所以使用 uintptr 先转为一个可计算的 uintptr 类型，而 <code>unsafe.Sizeof(string(\"\"))</code> 返回的是一个可以计算的 uintptr 类型，这两者相加就得到了指向 age 元素的指针 pAge 所以 *pAge 就是 18</p>\n","last_modified":1621048222,"replies":6,"id":777059}]